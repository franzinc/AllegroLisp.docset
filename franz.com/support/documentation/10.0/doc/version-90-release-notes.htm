<html><head><meta http-equiv="content-type" content="text/html; charset=UTF-8"> <title>Release Notes for Allegro CL 9.0</title></head><link rel="stylesheet" href="acldoc-styles.css" type="text/css"><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><a href="contents.htm"><b>ToC</b></a></td><td align="left" bgcolor="#00FFFF"><a href="introduction.htm"><b>DocOverview</b></a></td><td align="left" bgcolor="#00FFFF"><a href="cgide.htm"><b>CGDoc</b></a></td><td align="left" bgcolor="#00FFFF"><a href="release-notes.htm"><b>RelNotes</b></a></td><td align="left" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faq/"><b>FAQ</b></a></td><td align="left" bgcolor="#00FFFF"><a href="index.htm"><b>Index</b></a></td><td align="left" bgcolor="#00FFFF"><a href="permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 10.0</b><br><small><a href="introduction.htm#updates-s">Unrevised from 9.0 to 10.0.</a></small><br></td></tr></table><h1 id="2">Release Notes for Allegro CL 9.0</h1><p id="3">This document contains the following sections:</p><a href="#relnotes-intro-1">1.0 Introduction</a><br><a href="#post90-info-1">2.0 Information on changes and new stuff since the 9.0 release</a><br><a href="#fasl-incompat-1">3.0 Fasl files are not-compatible between versions and operating systems</a><br>&nbsp;&nbsp;&nbsp;<a href="#version-fasl-incompat-2">3.1 All pre-9.0 Lisp compiled files must be recompiled (old fasl files will not load)</a><br>&nbsp;&nbsp;&nbsp;<a href="#os-fasl-incompat-2">3.2 Fasl files may be incompatible in different Lisps on same hardware</a><br><a href="#install-1">4.0 Release Notes for installation</a><br><a href="#platform-specific-1">5.0 Release notes for specific platforms</a><br>&nbsp;&nbsp;&nbsp;<a href="#macosx-2">5.1 Mac OS X notes</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#yose-update-2">5.1.1 Allegro CL must be updated to work with Mac OS X 10.10</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#maverick-x11-2">5.1.2 Installing Mavericks OS (Mac OS X 10.9) may break X11</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#lion-x11-2">5.1.3 Installing Mountain Lion OS (Mac OS X 10.8) may uninstall X11</a><br>&nbsp;&nbsp;&nbsp;<a href="#heap-start-2">5.2 Heap start locations</a><br><a href="#acl-1">6.0 Release Notes for the base Lisp</a><br>&nbsp;&nbsp;&nbsp;<a href="#acl-new">6.1 New features in the base Lisp</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#acl-added-in-82">6.1.1 Features added to Allegro CL 8.2 after the initial release of Allegro CL 8.2</a><br>&nbsp;&nbsp;&nbsp;<a href="#acl-non-back-2">6.2 Non-backward-compatible changes in the base Lisp</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#acl-new-in-90-3">6.2.1 New features in Allegro CL 9.0</a><br>&nbsp;&nbsp;&nbsp;<a href="#acl-other-2">6.3 Other changes to and notes about the base Lisp</a><br>&nbsp;&nbsp;&nbsp;<a href="#acl-smp-2">6.4 Multiprocessing and SMP release notes</a><br>&nbsp;&nbsp;&nbsp;<a href="#acl-platform-specific-2">6.5 Base Lisp platform-specific information</a><br><a href="#clim-1">7.0 Release Notes for CLIM</a><br><a href="#cg-1">8.0 Release Notes for Common Graphics and the IDE</a><br>&nbsp;&nbsp;&nbsp;<a href="#mac-ide-2">8.1 Common Graphics and the IDE on the Mac</a><br>&nbsp;&nbsp;&nbsp;<a href="#cg-significant-new-2">8.2 Significant changes in Common Graphics</a><br>&nbsp;&nbsp;&nbsp;<a href="#cg-non-back-2">8.3 Non-backward-compatible changes in Common Graphics</a><br>&nbsp;&nbsp;&nbsp;<a href="#cg-other-2">8.4 Other changes in Common Graphics</a><br>&nbsp;&nbsp;&nbsp;<a href="#ide-release-notes-2">8.5 IDE release notes</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#opening-earlier-projects-3">8.5.1 Opening projects from releases prior to 9.0</a><br>&nbsp;&nbsp;&nbsp;<a href="#cg-win-gtk-2">8.6 Functionality to handle differences between Windows and GTK</a><br>&nbsp;&nbsp;&nbsp;<a href="#win-pack-2">8.7 Release notes for the winapi module</a><br><a href="#aserve-1">9.0 Release notes for AllegroServe</a><br><a href="#eli-misc-1">10.0 Release notes for The Emacs/Lisp interface</a><br><a href="#clx-1">11.0 Availability of CLX for Allegro CL</a><br><a href="#orblink-1">12.0 Release notes for Orblink</a><br><a href="#app-conformance-proj">Appendix A. ANSI Conformance in Allegro CL</a><br><hr><hr><h2 id="4"><a name="relnotes-intro-1">1.0 Introduction</a></h2>



<p id="5">
This document is a copy of the version 9.0 release notes included with
the version 10.0 documentation, providing release notes for release
9.0 of Allegro Common Lisp and related products. Note: if you are
using version 9.0, you should not refer to this document but to the
current
actual <a href="http://franz.com/support/documentation/9.0/doc/release-notes.htm">9.0
Release Notes</a> as this document is simplified and also not updated
for changes to 9.0 after the 10.0 release.
</p>


<p id="6">
This document describes the changes, major and minor, from 8.2 to
9.0. Please look particularly at these sections:
</p>

<ul>

<li id="7">
<a href="#acl-new">Section 6.1 New features in the base Lisp</a>: this section describes new
features.
</li>
<li id="8">
<a href="#acl-non-back-2">Section 6.2 Non-backward-compatible changes in the base Lisp</a>: this very important
section describes changes to Allegro CL which are <b>not</b> backward
compatible. You may have to modify your source code in light of these
changes.
</li>
<li id="9">

<a href="#cg-non-back-2">Section 8.3 Non-backward-compatible changes in Common Graphics</a>: [Common Graphics is not
available on all platforms] this section describes changes to Common
Graphics which are <b>not</b> backward compatible. You may have to
modify your source code in light of these changes.

</li>
</ul>

<hr><hr><h2 id="10"><a name="post90-info-1">2.0 Information on changes and new stuff since the 9.0 release</a></h2>

<p id="11">
These changes were made after the initial release of Allegro CL 9.0.
You must update you images to use most of the functionality described
(see <a href="operators/system/update-allegro.htm"><b>sys:update-allegro</b></a>). Note that this section
is not updated for changes made after the 10.0 release. See the
current
actual <a href="http://franz.com/support/documentation/9.0/doc/release-notes.htm">9.0
Release Notes</a> for the latest 9.0 information.
</p>

<ol>
<li id="12">
<b>New EC2 implementation</b>: an updated interface to the Amazon
Elastic Compute Cloud (EC2) has been released in a patch dated
November 4, 2014. The API version support is moved to version 2014-09-01.
See <a href="ec2.htm">ec2.htm</a> for further information.
</li>
<li id="13">
<b>Update required to use Allegro CL 9.0 with Mac OS X 10.10</b>.
Allegro CL updates are required to use Allegro CL 9.0 with Mac OS X
10.10. Please see <a href="installation.htm#mac-osx-yose-2">Updating for Mac OS X 10.10</a>
in <a href="installation.htm">installation.htm</a> for information. Note that, as
described in the linked section, XQuartz must also be reinstalled.
</li>
<li id="14">
<b>A new for-as-in-sequence subclause for the loop
macro</b>. The <a href="../ansicl/dictentr/loop.htm"><b>loop</b></a>
macro now supports a <code>for-as-in-sequence</code> subclause
which iterates over a list or a simple, general vector. Existing
(standard) subclauses include <code>for-as-in-list</code> and
<code>for-as-across</code> (for vector) and this new subclause
combines them, as so allows the sequence operated on to be a list or a
simple vector at runtime. See <a href="implementation.htm#cl-loop-2">cl:loop and the for-as-in-sequence subclause for looping over sequences</a>
in <a href="implementation.htm">implementation.htm</a>. This new subclause was added
in a patch in May, 2014.
</li>
<li id="15">
<b>New universal date parser</b>. New functions
<a href="operators/excl/string-to-universal-time.htm"><b>string-to-universal-time</b></a> and
<a href="operators/excl/universal-time-to-string.htm"><b>universal-time-to-string</b></a>
convert strings denoting times in various standard formats to
universal times and universal times to strings in various
formats. Converting durations to strings is also supported. This is
not part of the date-time module described
in <a href="date-time.htm">date-time.htm</a> but since the functionality is
related, the <a href="date-time.htm#ut-parser-1">General
date to universal time parsers</a> section in that document
describes the new facility. These functions were added in a patch
released in May, 2014.
</li>
<li id="16">
<b>jLinker update</b>: a patch released in April, 2014 made a number
of changes to the jLinker module. There are now several calling
models, including a new calling style where Lisp functions are
generated by analyzing Java jar files or classes.  The names of the
Lisp functions are systematically derived from the Java names and
mimic the overloading style used in Java; in most cases, the Lisp name
is easily deduced from the Java name so that perusing a translation
table is rarely needed.  The correct Java method to call is determined
at run time by comparing the Lisp argument types to Java
signatures. See <a href="jlinker.htm#calling-style-2">Calling Style from Lisp to Java</a>
in <a href="jlinker.htm">jlinker.htm</a>.
</li>
<li id="17">
<b>Major update to SSL socket module</b>. (This change is not related
to the Heartbleed problem described in the next item.) The interface
to SSL sockets has been upgraded. SSL contexts, re-usable objects
which contain configuration values for SSL server and client streams,
are now supported. Contexts are created with 
<a href="operators/socket/make-ssl-server-context.htm"><b>make-ssl-server-context</b></a> and
<a href="operators/socket/make-ssl-client-context.htm"><b>make-ssl-client-context</b></a>. <a href="operators/socket/make-ssl-server-stream.htm"><b>make-ssl-server-stream</b></a> and
<a href="operators/socket/make-ssl-client-stream.htm"><b>make-ssl-client-stream</b></a>
now have <i>context</i> keyword arguments which take an
SSL context as a value. Also, the default value for
the <i>method</i> argument to <a href="operators/socket/make-ssl-server-stream.htm"><b>make-ssl-server-stream</b></a> and
<a href="operators/socket/make-ssl-client-stream.htm"><b>make-ssl-client-stream</b></a>
is <code>:tlsv1+</code>. These modifications were added in a patch
released in April, 2014.
</li>
<li id="18">
<b>Fix for OpenSSL Heartbleed bug available</b>. The OpenSSL
Heartbleed bug
(see <a href="https://www.openssl.org/news/secadv_20140407.txt">https://www.openssl.org/news/secadv_20140407.txt</a>)
requires new library files and application rebuilds. See
the <a href="http://franz.com/support/tech_corner/heartbleed040914.lhtml">Tech
Corner Article</a> at
<a href="http://franz.com/support/tech_corner/heartbleed040914.lhtml">http://franz.com/support/tech_corner/heartbleed040914.lhtml</a> for
instructions. Users are <b>strongly</b> recommended to apply this fix.
</li>
<li id="19">
<b>The list value of *global-gc-behavior* should not be used in an SMP
Lisp.</b> The variable <a href="variables/excl/s_global-gc-behavior_s.htm"><code>*global-gc-behavior*</code></a> controls when and how
often global garbage collections happen. On possible value for this
variable is a list of a positive integer (specifying a number of
seconds), and a real greater than or equal to 1.0 (and optionally a
boolean specifying verbosity). This value is designed to trigger
global gc's after a specified amount of idle time. But idle time is
ill-defined in an SMP Lisp. The list value for <a href="variables/excl/s_global-gc-behavior_s.htm"><code>*global-gc-behavior*</code></a> uses <a href="operators/system/funcall-after-idle-timeout.htm"><b>sys:funcall-after-idle-timeout</b></a>, which, as
the next item notes, should not be used in SMP Lisps.
</li>
<li id="20">
<b>sys:funcall-after-idle-timeout should not be used in an SMP
Lisp.</b> In an SMP Lisp, idle time is ill-defined. The function 
<a href="operators/system/funcall-after-idle-timeout.htm"><b>sys:funcall-after-idle-timeout</b></a>, which calls
a function after a specified idle time, should not be used.
</li>
<li id="21">
<b>Documentation for load-compiled corrected</b>. The function
<a href="operators/excl/load-compiled.htm"><b>load-compiled</b></a>, when first
implemented, compiled a file but did not write a fasl file. That was
changed some time ago so <a href="operators/excl/load-compiled.htm"><b>load-compiled</b></a> is a roughly equivalent to
the <a href="tpl-commands/cload.htm"><b>:cload</b></a> top-level command
(compiling and loading file). The documentation has been corrected.
</li>
<li id="22">
<b>Enhancement to net.post-office:send-letter</b>. The first argument
to <a href="operators/post-office/send-letter.htm"><b>net.post-office:send-letter</b></a>, the
server specification, can now specify an alternate transport
mechanism, instead of the usual SMTP network
protocol. See <a href="operators/post-office/send-letter.htm"><b>net.post-office:send-letter</b></a> for
details. The patch implementing this cahange was released in early
November, 2013.
</li>
<li id="23">
<b>Some MySQL changes.</b> A
new <b><i>client-flags</i></b> keyword argument
to <a href="operators/mysql/connect.htm"><b>connect</b></a> was added to
8.2 in a patch but was not documented in either the 8.2 or 9.0
documentation until now. A patch released in early August, 2013,
modified the behavior of the <b><i>host</i></b> keyword
argument to <a href="operators/mysql/connect.htm"><b>connect</b></a>,
which can now be a list. <a href="operators/mysql/insert-db.htm"><b>insert-db</b></a> now has
an <i>on-dup-keys</i> keyword argument improves handling
when the insert tries to insert a row with the same values in key
columns as an existing row. Also, some support for stored procedures
has been added. See
<a href="mysql.htm#mysql-stored-proc-1">MySQL and stored procedures</a> in <a href="mysql.htm">mysql.htm</a>.
</li>
<li id="24">
<b>A patch released in late Jult, 2013 implements a major jLinker
upgrade.</b> A major patch release of jlinker (version 7.1) adds
several new features.  The patch consists of Lisp code in a new fasl
file and Java code in a new jar file. New features include connection
pooling, better socket handling, and improved error hierarchy. A
number of functions have been modified, but all modifications are
backward compatible. See <a href="jlinker.htm">jlinker.htm</a> for a complete
discussion of the patch. The patch is for version 9.0 only. It does
not apply to earlier releases.
</li>
<li id="25">
<b>New regexp patch fixes some replace-re behavior and enhances
match-re.</b> A bug in <a href="operators/excl/replace-re.htm"><b>replace-re</b></a> caused handling of BOS and EOS
markers incorrectly. So <code>(replace-re "abc abc bc" "^abc\\s+"
"_")</code> would return "__bc" rather than "_abc
bc". Also, <code>(replace-re "abc def " "def$" "_" :end
7)</code> would return "abc _ " rather than "abc def ". This has
been fixed and the correct values are now returned. As part of the
change, <a href="operators/excl/match-re.htm"><b>match-re</b></a> has
additional keyword arguments <i>start-unbounded</i> and
<i>end-unbounded</i>. The behavior of <a href="operators/excl/match-re.htm"><b>match-re</b></a> is unchanged if the new arguments are
not specified.
</li>
<li id="26">
<b>Better control over proxies in Aserve.</b> If you allow proxies in
AllegroServe, you may open a security hole. Proxies, which before were
general, can now be restruicted to specific machines using the new
proxy-control object, if
desired. See <a href="aserve/aserve.html#proxy">the Proxy section</a>
of the <a href="aserve/aserve.html">the AllegroServe documentation</a>
for details.
</li>
<li id="27">
<b>The profiler may now be included in runtime images (except those
created by Allegro Express).</b>
</li>
<li id="28">
<b>New jlinker-init keyword argument: :end-function</b>.  The value of
the <i>end-function</i> keyword argument
to <a href="operators/jlinker/jlinker-init.htm"><b>jlinker-init</b></a> should be
a function called when a jlinker connection is terminated.  The
function gets a single argument, the jlinker connection
instance. Added by a pacth released May 1, 2013.
</li>
<li id="29">
<b>All nicknames removed for the excl package</b>. This was done when
9.0 was released but we neglected to document it. The nicknames
were <code>excl</code>, <code>franz</code>,
and <code>stream</code>. In fact, it is illegal for a package
nickname to be the package name (so excl was removed). The other two
names (which were added when the symbols in those packages were merged
into the excl package) were removed so that they would not appear as
qualifiers to excl symbols when <a href="variables/excl/s_print-nickname_s.htm"><code>excl:*print-nickname*</code></a> is true. <b>This is a
backward incompatible change</b>. Users who depend on stream or franz
as nicknames can add them back using <a href="../ansicl/dictentr/rename-p.htm"><b>rename-package</b></a> if desired. This item is
repeated below in <a href="#acl-non-back-2">Section 6.2 Non-backward-compatible changes in the base Lisp</a>.
</li>
<li id="30">
<b>regexp patch fixes some bugs, changes split-re behavior. WARNING:
some changes result in changed behavior (nil might be returned instead
of (""); some forms no longer signal errors).</b>. A patch released in
February, 2013 fixes some regexp bugs and changes the behavior
of <a href="operators/excl/split-re.htm"><b>split-re</b></a> to match PERL
behavior. <a href="operators/excl/split-re.htm"><b>split-re</b></a> now has a
limit keyword argument; it not longer errors when
the <i>regexp</i> argument matches the empty string; and
trailing empty fields are removed. See <a href="regexp.htm">regexp.htm</a>
and also the description of <a href="operators/excl/split-re.htm"><b>split-re</b></a>, where we have examples of the
changes.
</li>
<li id="31">
<b>New ability to dump virtual images on Windows.</b>
See <a href="dumplisp.htm#pseudo-fork-1">Virtual dumplisp:
for very large images and pseudo-forks on Windows</a>
</li>
<li id="32">
We have revised the <a href="regexp.htm">regexp.htm</a> and have removed the
discussion of the older <b>regexp</b> module (which is still
maintained for backward compatibility, and individual functions are
still documented in the operators pages)). All new code should use the
regexp2 module described in <a href="regexp.htm">regexp.htm</a>.
</li>
<li id="33">
<b>text-line does not work on file streams</b>. The
<a href="operators/cg/t/text-line.htm"><b>common-graphics:text-line</b></a> function only
works on <a href="classes/cg/text-edit-pane.htm"><code>text-edit-pane</code></a>s and
<a href="classes/cg/multi-line-editable-text.htm"><code>multi-line-editable-text</code></a> widgets. It
does not work on file streams. The documentation has been updated to
make that clear.
</li>
</ol>

<hr><hr><h2 id="34"><a name="fasl-incompat-1">3.0 Fasl files are not-compatible between versions and operating systems</a></h2>


<hr><h2 id="35"><a name="version-fasl-incompat-2">3.1 All pre-9.0 Lisp compiled files must be recompiled (old fasl files will not load)</a></h2>

<p id="36">
<i>fasl</i> files (compiled Lisp files) created by
releases of Allegro CL prior to 9.0 
will not load into Allegro CL 9.0. All such files must be recreated by
compiling the associated Lisp source files. An error will be signaled
if Lisp attempts to load an older, incompatible
<i>fasl</i> file.
</p>



<hr><h2 id="37"><a name="os-fasl-incompat-2">3.2 Fasl files may be incompatible in different Lisps on same hardware</a></h2>

<h3 id="38">
Fasl files created on Windows x86 cannot be loaded into Linux or
FreeBSD x86 Lisps
</h3>

<p id="39">
The Windows and UNIX operating systems are too different. However,
FASL files (for the same Lisp version) can generally be shared between
different UNIX operating systems on the same hardware. The general
principles are as follows. Note that incompatibility may creep in for
reasons outside our control. If fasl files are incompatible, recompile
on the target machine.
</p>
<h3 id="40">
Fasl files will usually be compatible between platforms when:
</h3>
<ul>
<li id="41">
the architecture (hardware) is the same
</li>
<li id="42">
the calling convention is the same (that is, the method of calling
functions and the registers they use for arguments are the same)
</li>
<li id="43">
the method for generating signals can be made compatible (this cannot
be done for Windows and UNIX, so they are incompatible for this
reason)
</li>
</ul>
<p id="44">
It is up to the user to ensure that there are no os-specific
dependencies, or that features (i.e. #+/#- ) did not cause
essential code to be excluded or extraneous code introduced
that would cause a problem on the crossed architecture.
</p>



<hr><hr><h2 id="45"><a name="install-1">4.0 Release Notes for installation</a></h2>

<ol>
<li id="46">

<b>Version 9.0 uses the 8.2 installation
procedure</b>:
installation is described in
<a href="installation.htm">installation.htm</a>. 

</li>
<li id="47">
<b>The distribution includes 8 bit and 16 bit character images</b>
(this information is repeated from earlier Release Notes). Allegro CL
has images that support 8 bit characters only, or 16 bit
characters only. It is our expectation that most users will use the 16
bit images. Executables supplied with the distribution either have or
do not have `8' in the name. Those with 8 in the name (mlisp8 and
alisp8, e.g.) support 8 bit characters. Those without a number in the
name support 16 bit characters. Image (dxl) files also come in 8 and
16 varieties. Again, 8 in the name means 8 bit character
support. Character support for images and executables must
match. Trying to start an executable with the wrong type of image
fails.
</li>

<li id="48">
<b>No prebuilt Allegro Composer images in the distribution</b> 
(this information is repeated from earlier Release Notes). To
create an Allegro Composer image, start Allegro CL and load
<em>buildcomposer.cl</em>. That will produce <em>composer</em> and
<em>composer.dxl</em>, or <em>composer8</em> and
<em>composer8.dxl</em>. Allegro Composer is available on Unix only.
</li>

<li id="49">
<b>No prebuilt Allegro CLIM images in the distribution</b> (this
information is repeated from earlier Release Notes). To create a CLIM
image, start Allegro CL and load <em>buildclim.cl</em>. That will
produce <em>clim</em> and <em>clim.dxl</em>, or <em>clim8</em> and
<em>clim8.dxl</em>.
</li>

</ol>

<hr><hr><h2 id="50"><a name="platform-specific-1">5.0 Release notes for specific platforms</a></h2>


<p id="51">
Allegro CL 9.0 is known to work with the following minimal operating
system versions. Allegro CL 9.0 runs on all operating system versions
released (not in beta or pre-release form) January 1, 2012. See
below for places to obtain information on operating systems released
after that date.
</p>
<p id="52">
Because Ubuntu no longer supports 32-bit libraries, 32-bit Allegro CL
does not run on current and recent versions of Ubuntu. (If you have an
old version which has 32-bit libraries, 32-bit Allegro CL will work
but then you cannot upgrade the OS.)
</p>

<h3 id="53">
64-bit platforms
</h3>

<ul>
<li id="54">
64-bit Apple Mac OS X 10.6
</li>
<li id="55">
64-bit Linux (x86-64), glibc 2.11
</li>
<li id="56">
64-bit Microsoft Windows XP/Vista/7 &Server 
</li>
<li id="57">
64-bit Sun Solaris (SPARC) 2.10 (no SMP)
</li>
<li id="58">
64-bit Sun Solaris (x86-64) 2.10 (no SMP)
</li>
</ul>

<h3 id="59">
32-bit platforms
</h3>

<ul>
<li id="60">
Apple Mac OSX (Intel) 10.6
</li>

<li id="61">
FreeBSD 8.2  (no SMP)
</li>
<li id="62">
Linux (x86), glibc 2.11 (but not on Ubuntu, see above)
</li>
<li id="63">
Microsoft Windows XP/Vista/7 & Server
</li>
<li id="64">
Sun Solaris (SPARC) 2.10  (no SMP)
</li>
</ul>



<hr><h2 id="65"><a name="macosx-2">5.1 Mac OS X notes</a></h2>


<p id="66">
Allegro CL 9.0 is only supported on Mac OS X version 10.6 or later.
It is not supported on versions 10.5 or
earlier.
</p>
<p id="67">
Common Graphics and the IDE are now supported on Mac OS
X but are not supported on the SMP version on the Mac.
See <a href="#mac-ide-2">Section 8.1 Common Graphics and the IDE on the Mac</a> for more
information. Both the IDE and CLIM require certain tools (X11, GTK,
Open Motif) which may have to be installed
separately. See <a href="installation.htm#macosx-install-1">Installation on Mac OS X</a>
in <a href="installation.htm">installation.htm</a> for details.
</p>


<p id="68">
The Runtime Analyzer (see <a href="runtime-analyzer.htm">runtime-analyzer.htm</a>)
does not work properly on the 64-bit Mac OS X port (there is no
problem on the 32-bit port).
</p>



<h4 id="69">Building shared libraries on Mac OS X</h4>
<p id="70">
<a href="foreign-functions.htm#ff-on-macosx-1">Building
shared libraries on Mac OS X</a> in
<a href="foreign-functions.htm">foreign-functions.htm</a> describes how to create a
shared library suitable for loading into Allegro CL. We have
determined that the <code>-flat_namespace</code> to the
<b>ld</b> used to create the shared library is necessary, as shown in
the linked section.
</p>

<hr><h2 id="71"><a name="yose-update-2">5.1.1 Allegro CL must be updated to work with Mac OS X 10.10</a></h2>


<p id="72">
Allegro CL updates are required to use Allegro CL 9.0 with Mac OS X
10.10.  Please see <a href="installation.htm#mac-osx-yose-2">Updating for Mac OS X 10.10</a>
in <a href="installation.htm">installation.htm</a> for information.
</p>





<hr><h2 id="73"><a name="maverick-x11-2">5.1.2 Installing Mavericks OS (Mac OS X 10.9) may break X11</a></h2>

<p id="74">
We have had reports that installing the Mavericks OS on Macs (Mavericks
is Mac OS X 10.9) causes X11 to be stop working properly. The symptom
is blank rectangles in Common Graphics applications (including
Gruff). X11 is necessary for the IDE, CLIM, and Allegro Composer. To
fix the problem, install the latest version
of <a href="http://xquartz.macosforge.org/landing/">XQuartz</a>
(available
from <a href="http://xquartz.macosforge.org/landing/">http://xquartz.macosforge.org/landing/</a>) <b>after</b>
installing Mavericks (regardless of what version, if any, was
installed before installing Mavericks).
</p>






<hr><h2 id="75"><a name="lion-x11-2">5.1.3 Installing Mountain Lion OS (Mac OS X 10.8) may uninstall X11</a></h2>

<p id="76">
We have had reports that installing the Mountain Lion OS on Macs
(Mountain Lion is Mac OS X 10.8) causes X11 to be uninstalled, and
does not itself include X11. X11 is necessary for the IDE, CLIM, and
Allegro Composer. If you find X11 uninstalled (so it is no longer in
the <b>Utilities</b> sub-folder of the <b>Applications</b> folder, you
can reinstall it by downloading and
installing <a href="http://xquartz.macosforge.org/landing/">XQuartz</a>.
</p>
<p id="77">
If you have an older version of Mac OS and need to install/reinstall
X11, install it from your installation medium.
</p>











<hr><h2 id="78"><a name="heap-start-2">5.2 Heap start locations</a></h2>


<p id="79">
When building large new images, it is often useful to specify Lisp
Heap and C-heap start locations. See the discussion of the
<i>lisp-heap-start</i> and
<i>c-heap-start</i> keyword arguments in <a href="building-images.htm#arguments-without-inherited-defaults-1">Arguments to
build-lisp-image 2: defaults not inherited from the running
image</a> in <a href="building-images.htm">building-images.htm</a>. Here are
the initial locations (called `bases') in Allegro CL 9.0 as delivered.
Values are Hexadecimal integers.
</p>
<table BORDER="1" CELLSPACING="1" CELLPADDING="2" WIDTH="90%">
  <tr>
    <td WIDTH="30%" VALIGN="TOP"><strong>Operating System</strong></td>
    <td WIDTH="35%" VALIGN="TOP"><strong>Lisp base</strong></td>
    <td WIDTH="35%" VALIGN="TOP"><strong>C base</strong></td>
  </tr>
  <tr>
    <td WIDTH="30%" VALIGN="TOP">FreeBSD</td>
    <td WIDTH="35%" VALIGN="TOP">0x40000000</td>
    <td WIDTH="35%" VALIGN="TOP">0xa0000000</td>
  </tr>
  <tr>
    <td WIDTH="30%" VALIGN="TOP">Linux (x86)</td>
    <td WIDTH="35%" VALIGN="TOP">0x20000000</td>
    <td WIDTH="35%" VALIGN="TOP">0xa0000000</td>
  </tr>
  <tr>
    <td WIDTH="30%" VALIGN="TOP">Linux (AMD64) 64-bit</td>
    <td WIDTH="35%" VALIGN="TOP">0x1000000000</td>
    <td WIDTH="35%" VALIGN="TOP">0x2000000000</td>
  </tr>
  <tr>
    <td WIDTH="30%" VALIGN="TOP">Mac OS X 32-bit</td>
    <td WIDTH="35%" VALIGN="TOP">0x10000000</td>
    <td WIDTH="35%" VALIGN="TOP">0x74000000</td>
  </tr>
  <tr>
    <td WIDTH="30%" VALIGN="TOP">Mac OS X 64-bit</td>
    <td WIDTH="35%" VALIGN="TOP">0x1000000000</td>
    <td WIDTH="35%" VALIGN="TOP">0x2000000000</td>
  </tr>
  <tr>
    <td WIDTH="30%" VALIGN="TOP">Windows 32-bit</td>
    <td WIDTH="35%" VALIGN="TOP">0x20000000</td>
    <td WIDTH="35%" VALIGN="TOP">0x54000000</td>
  </tr>
  <tr>
    <td WIDTH="30%" VALIGN="TOP">Windows 64-bit</td>
    <td WIDTH="35%" VALIGN="TOP">0x100000000</td>
    <td WIDTH="35%" VALIGN="TOP">0x200000000</td>
  </tr>
  <tr>
    <td WIDTH="30%" VALIGN="TOP">Solaris 32-bit</td>
    <td WIDTH="35%" VALIGN="TOP">0x4000000</td>
    <td WIDTH="35%" VALIGN="TOP">0x54000000</td>
  </tr>
  <tr>
    <td WIDTH="30%" VALIGN="TOP">Solaris 64-bit</td>
    <td WIDTH="35%" VALIGN="TOP">0x1000000000</td>
    <td WIDTH="35%" VALIGN="TOP">0x10000000000</td>
  </tr>
  <tr>
    <td WIDTH="30%" VALIGN="TOP">Solaris (AMD64) 64-bit</td>
    <td WIDTH="35%" VALIGN="TOP">0x1000000000</td>
    <td WIDTH="35%" VALIGN="TOP">0x10000000000</td>
  </tr>
</table>





<hr><hr><h2 id="80"><a name="acl-1">6.0 Release Notes for the base Lisp</a></h2>

<p id="81">
This main section contains three subsections (which have additional
subsections): one on new features
(<a href="#acl-new">Section 6.1 New features in the base Lisp</a>), one on changes which are not
backwards compatible and so may require code changes,
(<a href="#acl-non-back-2">Section 6.2 Non-backward-compatible changes in the base Lisp</a>), and one on
miscellaneous changes (<a href="#acl-other-2">Section 6.3 Other changes to and notes about the base Lisp</a>).
</p>


<hr><h2 id="82"><a name="acl-new">6.1 New features in the base Lisp</a></h2>

<p id="83">
Full SMP support is added for the Windows, Linux, and Mac platforms
(but not on Solaris or FreeBSD). This is the major new
feature. Non-SMP distributions are also provided for all platforms.
See <a href="smp.htm">smp.htm</a>.
</p>



<hr><h2 id="84"><a name="acl-added-in-82">6.1.1 Features added to Allegro CL 8.2 after the initial release of Allegro CL 8.2</a></h2>


<h3 id="85">
Major update to AllegroServe
</h3>

<p id="86">
A new version of AllegroServe, version 1.3.1, has been released. It is
available from github
(<a href="http://github.com/franzinc/aserve/">http://github.com/franzinc/aserve/</a>)
or as a patch for Allegrop CL 8.2. Of particular importance are
automatic compression and inflation of files, chunking support, and
new choices for security, including the TLS v1.0 (also called SSL
v3.1) protocol for secure
communications. See <a href="aserve/aserve.html">aserve/aserve.html</a>,
which is the AllegroServe documentation.
</p>
<p id="87">
The changes include:
</p>
<ol>
<li id="88">
<b>New compression and chunking support on
AllegroServe</b>. AllegroServe can now compress responses on the fly
if requested.  Aserve's client code can request a compressed transfer
and can uncompress the result. Further, In the past AllegoServe
disabled chunking for an SSL server and told users to use the http/1.0
protocol for clients when SSL was being used.  Now those restrictions
are gone.  The default for the server will be to use chunking in all
cases and clients can specify http/1.1 for requests over SSL. See
documentation
(<a href="aserve/aserve.html">aserve/aserve.html</a>) for
API changes related to these new features.
</li>
<li id="89">
<b>Security options</b>. <b>net.aserve:start</b> and
<b>net.aserve.client:do-http-request</b> have a :ssl-method keyword
argument which can be used to specify v2.0, v3.0 or TLS v1.0 (SSL
v3.1) communication protocols. Specifying :tslv1 means that you only
want to communicate using TLS v1.0 (SSL v3.1), the most modern and
secure of the protocols.
</li>
<li id="90">
<b>Delay sending headers for computed entities</b>. Errors can occur
when running the computed entity function.  When an error occurs one
would like to send back a different response such as '500 - Internal
Server Error'.  In order to make this possible the http response code
and the headers that follow that are not immediately sent back to the
server when <b>with-http-body</b> starts.  Instead they are held in
request-reply-stream and are only sent when the computed entity
function sends data to the stream.  Thus if you do computation before
sending any data you can avoid having any response sent to the client
until the computation finishes.
</li>
<li id="91">
<b>publish-directory can accept a list of destinations</b>.  When a
request comes in <b>publish-directory</b> will search one or more
directories for the requested file.
</li>
<li id="92">
<b>Other AllegroServe changes</b>. (1) The :keep-alive arguement
to <b>do-http-request</b> will now cause <b>do-http-request</b> to
return a fifth value: a socket connected to the server. That fifth
value will be <code>nil</code> if the server refuses to
keep the connection with the client open.  Even if the server agrees
to keeps the connection alive it will close it after some period of
inactivity. (2) <b>do-http-request</b> takes a :connection argument
which is how the socket returned by <b>do-http-request</b> should be
passed to the next <b>do-http-request</b> call.  It is ok if the value
of the :connection argument is <code>nil</code> or closed
socket.  <b>do-http-request</b> will notice that the socket is
unusable and will create a new one. See documentation
(<a href="aserve/aserve.html">aserve/aserve.html</a>).
</li>
</ol>

<h3 id="93">
jLinker revision patch removed
</h3>

<p id="94">
A jLinker patch released in April, 2011, has been withdrawn. If you
downloaded the patch, doing a further update will revoke it. It was
decided that the changes could not be accomodated in deployed
applications. The changes will be re-introduced in release 9.0.
</p>
<p id="95">
We have further revised <a href="jlinker.htm">jlinker.htm</a> and the
documentation of <a href="operators/jlinker/jlinker-init.htm"><b>jlinker-init</b></a> in light of removing
the patch.
</p>

<h3 id="96">
Major changes to the Allegro CL interface to the Amazon
Elastic Compute Cloud (EC2), some incompatible
</h3>

<p id="97">
The Amazon Elastic Compute Cloud (EC2), described
in <a href="ec2.htm">ec2.htm</a> has had a major revision, with support
now provided for regions. The changes are described at the beginning
of <a href="ec2.htm">ec2.htm</a>. Note that some changes are
incompatible: some argument lists have changed, a number of variables
have been removed, defaults for some arguments are changed, and so
on. There is also much new functionality.
</p>

<h3 id="98">
Other changes since the release
</h3>

<ul>
<li id="99">
<b>New installation for Mac 64-bit graphics utilities</b>. You need
GTK and X11 to use the IDE or CLIM with Allegro CL on the Mac, and
additionally OpenMotif for CLIM. Previously, installation of these
utilities for 64-bit Lisps was very involved and difficult. This
process has been simplified substantially, as described
in <a href="installation.htm#macosx-x11-2">Installing X11,
GTK, and Open Motif on Mac OS X</a>
in <a href="installation.htm">installation.htm</a>.
</li>
<li id="100">
<b>dequeue method can now wait with a
timeout</b>. The <i>wait</i> keyword argument to
<a href="operators/mp/dequeue.htm"><b>dequeue</b></a> can now be a real
number, indicating how many seconds a process should wait when asked
to dequeue an empty queue (waiting for an item to be added to the
queue so it can be dequeued). If the time limit is reached, the value
of the new <i>empty-queue-result</i> argument is
returned. If <i>wait</i> is <code>nil</code>
and the queue is empty, an error is returned (as
before). If <i>wait</i> is a real less than or equal to
zero and the queue is empty, <a href="operators/mp/dequeue.htm"><b>dequeue</b></a> returns the value of the
<i>empty-queue-result</i> immediately.
</li>
<li id="101">
<b>Deflation (compression) of data now supported</b>. The class
<a href="miscellaneous.htm#deflate-stream-class-bookmarkxx"><code>util.zip:deflate-stream</code></a> and
related functions allow you to compress data which can then be written
to a file or to a vector. The existing function
<a href="miscellaneous.htm#inflate-op-bookmarkxx"><b>util.zip:inflate</b></a> will uncompress
the data. The deflate utility was added in a patch released in March,
2011.
</li>
<li id="102">
<b>The macro in-case-mode, designed to assit loading fasl file
compiled in one case mode into a Lisp using another case
mode</b>. While it is always better to use source files and associated
fasl files compiled in the case mode you are using in your running
Lisp (see <a href="case.htm">case.htm</a>), sometimes this is not
possible. The new macro <a href="operators/excl/in-case-mode.htm"><b>in-case-mode</b></a> will permit loading fasl
files compiled in a different mode from the running Lisp in most
cases.
</li>
<li id="103">
<b>Structures may be passed and returned to foreign functions by value
as well as by reference</b>. See <a href="foreign-functions.htm#structs-by-value-1">Passing structures by value</a>
in <a href="foreign-functions.htm">foreign-functions.htm</a> for more
information. Until this change, all structures were passed and
returned by reference, even when the specification indicated (because
no *) that by value was desired. Because of this change, existing code
that seems to specify by value will signal a warning but will still be
converted to by reference. You must modify the code (specifying a
value for the <i>pass-structs-by-value</i> argument
to <a href="operators/ff/def-foreign-call.htm"><b>def-foreign-call</b></a>) or set
the value of <a href="variables/ff/s_pass-structs-by-value_s.htm"><code>ff:*pass-structs-by-value*</code></a> appropriately to get
by value behavior.
</li>
</ul>







<hr><h2 id="104"><a name="acl-non-back-2">6.2 Non-backward-compatible changes in the base Lisp</a></h2>

<ol>
<li id="105">
<b>All nicknames removed for the excl package</b>. This was done when
9.0 was released but we neglected to document it (we added this item
is a doc update). The nicknames
were <code>excl</code>, <code>franz</code>,
and <code>stream</code>. In fact, it is illegal for a package
nickname to be the package name (so excl was removed). The other two
names (which were added when the symbols in those packages were merged
into the excl package) were removed so that they would not appear as
qualifiers to excl symbols when <a href="variables/excl/s_print-nickname_s.htm"><code>excl:*print-nickname*</code></a> is true. <b>This is a
backward incompatible change</b>. Users who depend on stream or franz
as nicknames can add them back using <a href="../ansicl/dictentr/rename-p.htm"><b>rename-package</b></a> if desired. This item is
repeated above in <a href="#post90-info-1">Section 2.0 Information on changes and new stuff since the 9.0 release</a>.
</li>
<li id="106">
<b>Significant changes, many non-backward-compatible, changes to the
Amazon Elastic Compute Cloud (EC2)
interface</b>. See <a href="ec2.htm">ec2.htm</a> for details. The release
notes for the changes are at the beginning oif that document.
</li>
<li id="107">
<b>The asdf module does not autoload</b>. Users need to
evaluate <code>(require :asdf)</code> to use it.
</li>
<li id="108">
<b>delete, delete-if, delete-if-not, and delete-duplicates and in-place
deletion</b>. Certain deletion operations on vectors by <a href="../ansicl/dictentr/removere.htm"><b>delete</b></a>,
<a href="../ansicl/dictentr/removere.htm"><b>delete-if</b></a>, <a href="../ansicl/dictentr/removere.htm"><b>delete-if-not</b></a>, and <a href="../ansicl/dictentr/remove-d.htm"><b>delete-duplicates</b></a> modified the vector in place,
and so some programs, aware of this, might use the argument vector
rather than the result vector (that is, might assume the result vector
is the argument vector modified rather than a new vector). However, in
a SMP Lisp (and, in fact, but rarely in a non-SMP multiprocessing
Lisp), multiple threads traversing the vector simultaneously while one
deletes elements could cause heap corruption and so a new variable,
<a href="variables/excl/s_delete-in-place_s.htm"><code>*delete-in-place*</code></a>,
specifies whether deletion in place is allowed. The initial value of
this variable is <code>nil</code> in SMP Lisps (meaning
in-place deletion is not allowed), so the argument vector is never the
same as the result vector in that case. Code which assumed it was the
same can now fail. See <a href="implementation.htm#cl-delete-2">cl:delete, cl:delete-if, cl:delete-if-not,
cl:delete-duplicates: multiprocessing issues</a> in
<a href="implementation.htm">implementation.htm</a> for more information.
</li>
<li id="109">
<b>*cl-default-special-bindings* replaced by
*required-top-level-bindings* and other changes to process
initialization and
bindings</b>. <code>*cl-default-special-bindings*</code> has
been renamed <a href="variables/excl/s_required-top-level-bindings_s.htm"><code>*required-top-level-bindings*</code></a>. A new variable
<a href="variables/excl/s_required-thread-bindings_s.htm"><code>*required-thread-bindings*</code></a> provides bindings
for all threads. New macros <a href="operators/excl/required-thread-binding.htm"><b>required-thread-binding</b></a> and
<a href="operators/excl/required-top-level-binding.htm"><b>required-top-level-binding</b></a>
add to the alists which are the values of those
variables. <a href="multiprocessing.htm#dynamic-environments-1">Processes and their dynamic environments
(both models)</a> in <a href="multiprocessing.htm">multiprocessing.htm</a>
and <a href="startup.htm#setting-globals-1">Setting global
variables in initialization files</a>
in <a href="startup.htm">startup.htm</a> have been updated to reflect these
changes.
</li>
<li id="110">
<b>The debugger API has some keyword arguments changed to optional
arguments, and other API changes.</b> The debugger API, described
in <a href="debugger-api.htm">debugger-api.htm</a> has new (and incompatible)
argument lists for <b>db:oldest-frame</b> and <b>db:output-frame</b>:
they arglists used to have both optional and keyword argument and now
just have optional arguments. Also, there is a new function
<b>db:newest-frame</b>. And most single-letter argument names
(like <i>p</i> and <i>e</i>) now have
descriptive names (like <i>process</i>
and <i>environment</i>) though that change does not
affect the interface since the arguments are in all cases required or
optional. See <a href="debugger-api.htm">debugger-api.htm</a> for details.
</li>
<li id="111">
<b>with-output-to-buffer has modified argument list</b>. To make it
more like <a href="../ansicl/dictentr/with-out.htm"><b>with-output-to-string</b></a>,
the <i>buffer</i> argument to <a href="operators/excl/with-output-to-buffer.htm"><b>with-output-to-buffer</b></a> is now an optional
argument rather than a leyword argument. Further, the behavior when no
value is supplied for the buffer argument is different: before it was
equivalent to specifying nil and resulted in a bit bucket being used
(so the number of characters written was available but not the
characters themseleves). Now unsupplied means create an actual buffer
which extends when needed and whose contents are available
with <a href="operators/excl/get-output-stream-buffer.htm"><b>get-output-stream-buffer</b></a>. 
Specifying <code>nil</code>
has the same meaning as in earlier releases.
</li>
<li id="112">
Some command-line arguments now start with -- rather than -.  --ee,
--qq, --backtrace-on-error, --batch, --kill, --locale, and
--compat-crlf. See <a href="startup.htm#command-line-args-1">Command line arguments</a>
in <a href="startup.htm">startup.htm</a> for a list of command-line
arguments. The single - versions still work but are not longer
documented and will likely be removed in a later release.
</li>
</ol>

<hr><h2 id="113"><a name="acl-new-in-90-3">6.2.1 New features in Allegro CL 9.0</a></h2>


<ol>
<li id="114">
<b>New Idy5 compiler message notes that a dynamic-extent declaration
is ineffective</b>. See <a href="compiler-explanations.htm#idyn-label-3">this section</a>
of <a href="compiler-explanations.htm">compiler-explanations.htm</a>. The message appears
when there is a dynamic-extent declaration but it is ineffective
because declarations are not trusted.
</li>
<li id="115">
<b>def-foreign-call now has :documentation keyword
argument</b>. <code>(setf documentation)</code> works works on
foreign functions but this new feature allows specifying the
documentation without writing a wrapper function. See
<a href="operators/ff/def-foreign-call.htm"><b>ff:def-foreign-call</b></a>.
</li>
<li id="116">
<b>New gensym variant excl:gen-sym</b>. <a href="operators/excl/gen-sym.htm"><b>excl:gen-sym</b></a> is identical to <a href="../ansicl/dictentr/gensym.htm"><b>cl:gensym</b></a> except that a symbol is accepted as
its optional argument, in which case the symbol-name is used.  This is
useful for programs that are intended for use in either ansi or modern
lisps, where it is desired to print any gensyms without requiring
escapes.
</li>
<li id="117">
<b>with-staged-output and synchronized-output-stream-p allow
coordination when writing to a stream</b>. <a href="operators/excl/synchronized-output-stream-p.htm"><b>synchronized-output-stream-p</b></a> (which is
<a href="../ansicl/dictentr/setfpset.htm"><b>setf</b></a>'able) determines whether
a stream is marked as suitable for synchronized
output. <a href="operators/excl/with-staged-output.htm"><b>with-staged-output</b></a>
then ensures output is staged. Most built-in output functions are
called in the body of <a href="operators/excl/with-staged-output.htm"><b>with-staged-output</b></a>.
</li>
<li id="118">
<b>New functions peek-byte and unread-byte</b>. <a href="operators/excl/peek-byte.htm"><b>peek-byte</b></a> resembles <a href="../ansicl/dictentr/peek-cha.htm"><b>peek-char</b></a> except it peeks at a single byte
rather than a character. <a href="operators/excl/unread-byte.htm"><b>unread-byte</b></a> similarly
resembles <a href="../ansicl/dictentr/unread-c.htm"><b>unread-char</b></a> except
it unreads one byte rather than one
characters. See <a href="streams.htm#peek-byte-1">peek-byte and unread-byte</a>
in <a href="streams.htm">streams.htm</a> for a general discussion of these
functions.
</li>

<li id="119">
<b>New compiler switch enforces optimal branch alignment on 64-bit x86
platform</b>. <a href="variables/compiler/align-branch-targets-switch.htm"><code>align-branch-targets-switch</code></a>,
when true, tells the comnpiler to optimally align code branches on
64-bit x86 platform. Ignored on all other platforms.
</li>
<li id="120">
<b>New tester macro, variable useful for testing in SMP</b>. Allegro
CL provide a test harness described
in <a href="test-harness.htm">test-harness.htm</a>. While there has always been
issues when testing in a multiprocessing environment, in a non-SMP
Lisp these were fairly insignificant. They are more serious in an SMP
Lisp, so changes have been made to better manage the tester. These
include a new macro to use when incrementing results,
<a href="operators/util.test/inc-test-counter.htm"><b>inc-test-counter</b></a>; a
new variable which controls whether output should be labeled by
thread, <a href="variables/util.test/s_test-report-thread_s.htm"><code>*test-report-thread*</code></a>; and locking to
avoid intermixed tester output
mesages. See <a href="test-harness.htm#tester-smp-1">Running tests in multiple threads (Lisp
processes)</a> in <a href="test-harness.htm">test-harness.htm</a>
for more information.
</li>
<li id="121">
<b>yes-or-no-p and y-or-n-p now have better default format control
strings</b>. <a href="../ansicl/dictentr/y-or-n-p.htm"><b>yes-or-no-p</b></a> and
<a href="../ansicl/dictentr/y-or-n-p.htm"><b>y-or-n-p</b></a> previously had
empty default control strings. Now the defaults are "(Yes or No)? "
and "(Y or N)?  ".
</li>
<li id="122">
<b>Change to package locking</b>. Package locking is described
on <a href="packages.htm#package-locking-1">Package
locking and package definition locking</a>
in <a href="packages.htm">packages.htm</a>.  Packages locked against
definitions used to accept new definitions only if the name of
<a href="../ansicl/dictentr/package.htm"><code>*package*</code></a>, or
any of its nicknames, was on the locked package's
implementation-packages list. Definitions will still be accepted in
these cases, but will also be allowed if <a href="../ansicl/dictentr/package.htm"><code>*package*</code></a> is <a href="../ansicl/dictentr/eq.htm"><b>eq</b></a> to the locked package.
</li>
</ol>





<hr><h2 id="123"><a name="acl-other-2">6.3 Other changes to and notes about the base Lisp</a></h2>



<ol>
<li id="124">
<b>New queue keyword argument to schedule-finalization, new function
call-finalizer.</b> <a href="operators/excl/schedule-finalization.htm"><b>schedule-finalization</b></a>, which allows defining a
function to be called when an object becomes garbage, has a
new <i>queue</i> keyword argument. If
non-<code>nil</code>, it must be a <a href="classes/mp/queue.htm"><code>queue</code></a> object. When the object is marked as
garbage, instead of running the finalization function, the system will
place a finalizer object, which is a list of the finalization function
and the object, on the queue. It is then the responsibility of the
program to apply the function <a href="operators/excl/call-finalizer.htm"><b>call-finalizer</b></a> to that list at some
later time.
</li>
<li id="125">
<b>New HMAC functions for MD5 and SHA* encoding support</b>. 
See the new
<a href="operators/excl/hmac-init.htm"><b>hmac-init</b></a>, <a href="operators/excl/hmac-string.htm"><b>hmac-string</b></a>, <a href="operators/excl/hmac-update.htm"><b>hmac-update</b></a>, and <a href="operators/excl/hmac-final.htm"><b>hmac-final</b></a> which handle SHA* digest
algorithms.
See <a href="miscellaneous.htm#md5-1">MD5, SHA1,
HMAC, RC4, and other encoding support</a>
in <a href="miscellaneous.htm">miscellaneous.htm</a> for more information.
</li>
<li id="126">
<b>New general functions for MD* and SHA* encoding support</b>. 
Various new encoding algorithms are now supported, inlcuding 
MD2, MD4, MD5, SHA1, SHA256, SHA512, and
RMD160. 
There are new
functions <a href="operators/excl/digest-init.htm"><b>digest-init</b></a>,
<a href="operators/excl/digest-update.htm"><b>digest-update</b></a>, <a href="operators/excl/digest-final.htm"><b>digest-final</b></a>, <a href="operators/excl/digest-string.htm"><b>digest-string</b></a>, and <a href="operators/excl/digest-file.htm"><b>digest-file</b></a> which encode and support all those formats.
They are similar to the existing <b>md5-*</b> and <b>sha1-*</b> functions, with the same
arguments, except <a href="operators/excl/digest-init.htm"><b>digest-init</b></a>, <a href="operators/excl/digest-file.htm"><b>digest-file</b></a>, and <a href="operators/excl/digest-string.htm"><b>digest-string</b></a> have a <i>name</i>
required argument to specify the encoding format being
used). See <a href="miscellaneous.htm#md5-1">MD5, SHA1,
HMAC, RC4, and other encoding support</a>
in <a href="miscellaneous.htm">miscellaneous.htm</a> for more information.
</li>
<li id="127">
<b>Expanded #A reader macro, new variable
*print-simple-array-specialized*</b>. The standard #A template is
expanded from #nAdata to #{n}A{t}data where the <code>n</code>
is optional (defaulting to 1) and <code>t</code> can specify the
element type it is one of unsigned byte 4, 8, 16, 32 or 64, or signed
byte 8, 16, 32, or 64. See <a href="implementation.htm#sharpsign-a-2">The #A reader macro</a>
in <a href="implementation.htm">implementation.htm</a> for details. The printer will
use the new template when appropriate when the
variable <a href="variables/excl/s_print-simple-array-specialized_s.htm"><code>*print-simple-array-specialized*</code></a> is true.
</li>
<li id="128">
<b>user-homedir-pathname and username-to-home-directory documentation
about behavior on Windows corrected</b>.
<a href="../ansicl/dictentr/user-hom.htm"><b>cl:user-homedir-pathname</b></a>
and <a href="operators/excl/username-to-home-directory.htm"><b>excl:username-to-home-directory</b></a> were
incorrectly documented in 8.2. The documentation has been
corrected. (Essentially, the current user's home directory is returned
in all cases, and that is discovered from the HOMEDRIVE and HOMEPATH
environment variables, or, failing that, from the HOME environment
variable. #P"C\\" is returned if none of those environment variables
have valid values.) The behavior of <a href="../ansicl/dictentr/user-hom.htm"><b>cl:user-homedir-pathname</b></a> on Windows is discussed
in <a href="implementation.htm#user-homedir-pathname-2">What user-homedir-pathname does on
Windows</a> in <a href="implementation.htm">implementation.htm</a>.
</li>
<li id="129">
<b>get-output-stream-buffer now returns a second
value</b>. <a href="operators/excl/get-output-stream-buffer.htm"><b>get-output-stream-buffer</b></a> now returns the number
of elements written to the buffer as a second returned value.
</li>
<li id="130">
<b>excl:uncompile and cl:function-lambda-expression succeed in more
cases</b>. Both may succeed when source level debugging information is
stored (here <i>succeed</i> means returning a
non-<code>nil</code> first value for
<a href="../ansicl/dictentr/functio2.htm"><b>cl:function-lambda-expression</b></a>
and actually uncompiling the function for <a href="operators/excl/uncompile.htm"><b>uncompile</b></a>). See <a href="operators/excl/uncompile.htm"><b>uncompile</b></a>
and <a href="implementation.htm#cl-function-lambda-expression">cl:function-lambda-expression</a>
in <a href="implementation.htm">implementation.htm</a> for more information.
</li>
<li id="131">
<b>The :local and :set-local top-level commands have a raw option,
:r</b>. This option displays locals in raw
mode. See <a href="tpl-commands/local.htm"><b>:local</b></a> for a discussion
of this mode. <a href="tpl-commands/set-local.htm"><b>:set-local</b></a> allows
values to be set in raw mode.
</li>
<li id="132">
<b>Previously undocumented :x option to :local top-level command causes numbers
to be displayed in hexadecimal</b>. This option actually existed in
earlier releases but was not
dicumented. See <a href="tpl-commands/local.htm"><b>:local</b></a>.
</li>
<li id="133">
<b>There is now CRL (certificate revocation list) support in the SSL
(secure socket layer) implementation</b>. See <a href="operators/socket/make-ssl-client-stream.htm"><b>make-ssl-client-stream</b></a> and
<a href="operators/socket/make-ssl-server-stream.htm"><b>make-ssl-server-stream</b></a>.
</li>
<li id="134">
<b>make-ssl-server-stream now has a prefer-server-cipher-order keyword
argument</b>. When choosing a cipher during an SSLv3 or TLSv1
handshake, normally the client's preference is used.  However, if the new
<i>prefer-cipher-server-order</i> keyword argument to
<a href="operators/socket/make-ssl-server-stream.htm"><b>make-ssl-server-stream</b></a> is
non-<code>nil</code> (the default
is <code>nil</code>), the server's preference will be used
instead.
</li>
<li id="135">
<b>mapped-file-simple-stream has new release-handle option to
open</b>. The <a href="classes/excl/mapped-file-simple-stream.htm"><code>mapped-file-simple-stream</code></a> class can now be
opened with its handle released upon openning so the handle is
available for other uses. See
the <b><i>release-handle</i></b> option.
</li>
<li id="136">
<b>New arguments to def-foreign-call to control garbage-collections
while foreign code is running</b>. The new arguments to
<a href="operators/ff/def-foreign-call.htm"><b>def-foreign-call</b></a> are
<i>allow-gc</i>
and <i>release-heap-implies-allow-gc</i>.
</li>
<li id="137">
<b>add-signal-handler has new delayed-interrupts keyword
argument</b>. If the <i>delayed-interrupts</i> keyword
argument to <a href="operators/excl/add-signal-handler.htm"><b>add-signal-handler</b></a> is true, the handler be run
in a <a href="operators/excl/with-delayed-interrupts.htm"><b>with-delayed-interrupts</b></a>, else it will be run
with interrupts enabled.
</li>
<li id="138">
<b>New function mp:process-queue-interrupt</b>. The new generic
function <a href="operators/mp/process-queue-interrupt.htm"><b>mp:process-queue-interrupt</b></a> is like
<a href="operators/mp/process-interrupt.htm"><b>mp:process-interrupt</b></a> but calls the interruptions with
<a href="operators/excl/with-delayed-interrupts.htm"><b>with-delayed-interrupts</b></a>
being in effect which guarantees order of arrival processing.
</li>
<li id="139">
The pid argument to excl.osi:getsid is now optional. See
<a href="os-interface.htm#getsid-op-bookmarkxx"><b>excl.osi:getsid</b></a>. The default
value is 0.
</li>
<li id="140">
<b>New exit-on-missing-shared-library keyword argument to
build-lisp-image</b>. This new argument to <a href="operators/excl/build-lisp-image.htm"><b>build-lisp-image</b></a> causes the new image to exit
with a non-zero exit status after printing an appropriate error
message if a shared library cannot be found.
</li>
<li id="141">
<b>The time macro now reports page faults</b>. The general description
of the <a href="../ansicl/dictentr/time.htm"><b>time</b></a> macro is in the
ANS.
</li>
<li id="142">
<b>Additional keyword argument to excl.osi:find-in-path</b>. If
the <i>executable</i> keyword to <a href="os-interface.htm#find-in-path-op-bookmarkxx"><b>find-in-path</b></a>
(ignored on Windows) is non-<code>nil</code>, then only
matches of files that have execute bit set in their mode are returned.
</li>
<li id="143">
<b>New command line argument --debug-startup</b>. --debug-startup
prevents errors from being handled automatically by -L, -e, --ee and
init file processing. Instead, errors land in the debugger unless
--batch is also specified. See <a href="startup.htm#command-line-args-1">Command line arguments</a>
in <a href="startup.htm">startup.htm</a> for a list of command-line
arguments.
</li>
<li id="144">
<b>New Windows-only command line arguments +left, +top, +width,
+height</b>. These specify the position and size of the console
window. See <a href="startup.htm#command-line-args-1">Command line arguments</a>
in <a href="startup.htm">startup.htm</a> for a list of command-line
arguments.
</li>
<li id="145">
<b>New variable sys:*zlib-system-library*</b>. The value of
<a href="variables/system/s_zlib-system-library_s.htm"><code>sys:*zlib-system-library*</code></a> is the name of the
gzip library used by the deflate module.
See <a href="miscellaneous.htm#gzip-1">Support for gzip
compression and decompression</a>
in <a href="miscellaneous.htm">miscellaneous.htm</a>.
</li>
<li id="146">
<b>Use of cltl1 package is deprecated</b>. The <a href="operators/excl/compiler-let.htm"><b>compiler-let</b></a> special operator has been moved
to the excl package. Use of other functionality in the cltl1 package
should be avoided. The cltl-1 module is no longer autoloaded.
</li>
<li id="147">
<b>New :direction keyword argument to dbi:bind-parameter</b>. This
argument allows specification of the direction of the parameter in a
call to
<a href="operators/dbi/bind-parameter.htm"><b>dbi:bind-parameter</b></a>.
</li>
</ol>



<hr><h2 id="148"><a name="acl-smp-2">6.4 Multiprocessing and SMP release notes</a></h2>



<p id="149">
Because SMP is the major addition to Allegro CL 9.0 on the Windows,
Linux, and Mac platforms. Consequently multiprocessing in Allegro CL
has changed, we group all SMP and multiprocessing release notes into
this section.
</p>

<ol>
<li id="150">
<b>Atomic update routines will work on any symbol</b>. In the initial
implementations of SMP, only symbols defined with <a href="operators/excl/defvar-nonbindable.htm"><b>defvar-nonbindable</b></a> were suitable as places for
atomic update operators like <a href="operators/excl/push-atomic.htm"><b>push-atomic</b></a>. This is not longer true. Any
symbol can be used as such a place. <a href="operators/excl/defvar-nonbindable.htm"><b>defvar-nonbindable</b></a> is therefore no longer
associated with atomic updates but is retained because it may be
useful for other purposes. (This item was added after the initial
release of the 9.0 documentation.)
</li>
<li id="151">
<b>with-shared-lock, with-exclusive-lock, and sharable-lock-lock have
new recursive-p argument and return different values</b>. The
operators <a href="operators/mp/with-shared-lock.htm"><b>with-shared-lock</b></a>,
<a href="operators/mp/with-exclusive-lock.htm"><b>with-exclusive-lock</b></a>, and
<a href="operators/mp/sharable-lock-lock.htm"><b>sharable-lock-lock</b></a>, added with
a patch in 8.2, have new return values and have a new argument,
<i>recursive-p</i>. See the descriptions for details.
</li>
<li id="152">
<b>make-sharable-lock has new argument constructor, recursive-p
argument can have new values</b>. See the description
of <a href="operators/mp/make-sharable-lock.htm"><b>make-sharable-lock</b></a>.
</li>
<li id="153">
<b>New mp:condition-variable class</b>. A condition-variable provides
another way to synchronize the behavior of multiple
threads. See <a href="smp.htm#condition-vars-2">Condition
Variables</a> in <a href="smp.htm">smp.htm</a>.
</li>
<li id="154">
<b>New macro with-sharable-lock</b>. <a href="operators/mp/with-sharable-lock.htm"><b>with-sharable-lock</b></a> is similar but more powerful
than <a href="operators/mp/with-shared-lock.htm"><b>with-shared-lock</b></a>.
</li>
<li id="155">
<b>New generic function mp:process-join</b>. <a href="operators/mp/process-join.htm"><b>mp:process-join</b></a> suspends the current process
until the process thread of another process exits. This is a bit more
complicated than it sounds (processes can be associated with more than
one thread, so the question is, which is meant), as noted in the
documentation.
</li>
<li id="156">
<b>New generic function lockedp</b>. <a href="operators/mp/lockedp.htm"><b>lockedp</b></a> tests whether a lock is held.
</li>
<li id="157">
<b>New generic function process-lockedp</b>. See <a href="operators/mp/process-lockedp.htm"><b>process-lockedp</b></a>.
</li>
<li id="158">
<b>time macro reporting of new space additions</b>. In the statistics
reported by the garbage collector, the new-copied number is now the
net copied to newspace. When multiple sequential scavenges are
required, the number reported represents the amount copied into
newspace by the last scavenge, not the total copying done by all the
scavenges.
</li>
</ol>



<hr><h2 id="159"><a name="acl-platform-specific-2">6.5 Base Lisp platform-specific information</a></h2>

<p id="160">
There are no entries at this time. Information may be placed here in
documentation updates after the initial Allegro CL 9.0 release.
</p>





<hr><hr><h2 id="161"><a name="clim-1">7.0 Release Notes for CLIM</a></h2>

<p id="162">
The CLIM manual has not been updated (other than minor corrections)
for the 9.0 release.  There have been no significant changes to CLIM
functionality compared to 8.2, though there have been bug fixes and
performance enhancements.
</p>
<hr><hr><h2 id="163"><a name="cg-1">8.0 Release Notes for Common Graphics and the IDE</a></h2>




<p id="164">
<b>Common Graphics and the IDE are supported on Windows SMP Lisp but
are not supported in SMP Lisps on the Mac and Linux</b>. They are
supported in the non-SMP Lisps on Windows, Linux, and the Mac (the
same platforms on which they were supported in release 8.2).
</p>

<p id="165">
The <a href="#cg-non-back-2">first
subsection</a> describes changes to Common Graphics and
the IDE that are non backward-compatible. Please review this section
and make whatever necessary changes to your code to obtain the desired
behavior in release 8.2.
</p>
<p id="166">
The <a href="#cg-other-2">second subsection</a>
describes other changes to Common Graphics and the IDE. These should
not require code changes (please tell us if any do, because that may
indicate a bug), but note that certain function and argument names
have been deprecated in favor of new names, and that new code should
reflect these changes, and old code should be revised at some point.
</p>
<p id="167">
The section <a href="#ide-release-notes-2">Section 8.5 IDE release notes</a> and its
subsections provide information about the IDE.
</p>

<hr><h2 id="168"><a name="mac-ide-2">8.1 Common Graphics and the IDE on the Mac</a></h2>


<p id="169">
Common Graphics and the IDE and available on the Mac but only on the
non-SMP Lisp. You must run X11 (it is in the <b>/Applications</b>
directory and comes with recent versions of OSX and is usually
installed by default on 10.6, but see <a href="installation.htm#macosx-install-1">Installation on Mac OS X</a>
in <a href="installation.htm">installation.htm</a> for full details). Usage is
like that on Linux. See <a href="cgide.htm">cgide.htm</a> for details.
</p>
<p id="170">
These are known problems using CG and the IDE on the Mac:
</p>
<ol>
<li id="171">
<b>Parenthesis-matching marks are drawn on pop-up windows.</b> They
cannot be drawn directly on a lisp-edit-pane, so instead a pop-up
window (which otherwise looks like it is drawn directly on the pane)
is displayed. See <a href="variables/cg/s_show-parenthesis-matches-as-pop-up-window_s.htm"><code>*show-parenthesis-matches-as-pop-up-window*</code></a>,
which must be set to true, as it is initially on Mac OS X, and
also <a href="variables/cg/s_parenthesis-match-pop-up-milliseconds_s.htm"><code>*parenthesis-match-pop-up-milliseconds*</code></a>.
</li>
<li id="172">
<b>No annotations in form windows when designing dialogs</b>. The
annotations include widget resizing handles and alignment lines.
</li>
</ol>




<hr><h2 id="173"><a name="cg-significant-new-2">8.2 Significant changes in Common Graphics</a></h2>


<ul>
<li id="174">
<b>Support for multiple external formats in text-edit-panes</b>. This
change allows display of more than one character set in a
<a href="classes/cg/text-edit-pane.htm"><code>text-edit-pane</code></a> (such as
both English text using the Roman alphabet and Japanese text using
Japanese characters). New operators include
<a href="operators/cg/e/external-format-for-saved-files.htm"><b>external-format-for-saved-files</b></a>,
<a href="operators/cg/e/external-format-for-save.htm"><b>external-format-for-save</b></a>,
<a href="operators/cg/a/automatic-font-changing.htm"><b>automatic-font-changing</b></a>,
<a href="operators/cg/d/dual-fonts-for-languages.htm"><b>dual-fonts-for-languages</b></a>, all
in the cg package, <a href="operators/ide/ide-auto-font-changing.htm"><b>ide:ide-auto-font-changing</b></a> and
<a href="operators/ide/ide-dual-fonts-for-languages.htm"><b>ide:ide-dual-fonts-for-languages</b></a>, and the
variable <a href="variables/excl/s_use-unicode-winapi-for-cg_s.htm"><code>*use-unicode-winapi-for-cg*</code></a> in the excl package.
</li>
</ul>




<hr><h2 id="175"><a name="cg-non-back-2">8.3 Non-backward-compatible changes in Common Graphics</a></h2>


<ol>
<li id="176">
<b>draw-rounded-box and fill-rounded-box have smaller
corners</b>. Rounded box corners on GTK are smaller than in 8.x, but
now match beheavior on Windows. See <a href="operators/cg/d/draw-rounded-box.htm"><b>draw-rounded-box</b></a> and <a href="operators/cg/f/fill-rounded-box.htm"><b>fill-rounded-box</b></a>.
</li>
<li id="177">
<b>Variables dst, ds~t, d~st etc. renamed.</b> The exported constant
symbols like <code>dst</code> and <code>~d~st</code> for
paint operation bit flags have been renamed to <a href="variables/cg/po-dst.htm"><code>po-dst</code></a> and <a href="variables/cg/po-_t_d_t_st.htm"><code>po-~d~st</code></a>, etc., to avoid errors in apps that
use a local variable named <code>dst</code>.
</li>
</ol>



<hr><h2 id="178"><a name="cg-other-2">8.4 Other changes in Common Graphics</a></h2>




<ol>
<li id="179">
<b>New grid-widget functions determining which subsection gets
keyboard focus</b>. The new generic functions are <a href="operators/cg/f/focus-row-section.htm"><b>focus-row-section</b></a>, <a href="operators/cg/f/focus-column-section.htm"><b>focus-column-section</b></a>, and
<a href="operators/cg/f/focus-subsection.htm"><b>focus-subsection</b></a>. See <a href="classes/cg/grid-widget.htm"><code>grid-widget</code></a> for general information on grid
widgets.
</li>
<li id="180">
<b>New class-grid property horizontally-scrollable</b>. The
<a href="operators/cg/h/horizontally-scrollable.htm"><b>horizontally-scrollable</b></a> property of a
<a href="classes/cg/class-grid.htm"><code>class-grid</code></a> specifies
whether the user can interactively scroll a class-grid horizontally,
to bring other grid columns into view.
</li>
<li id="181">
<b>New properties to control whether a grid-section scrolls when the
user drags a grid-subsection to a new position among its
siblings</b>. <a href="operators/cg/s/scroll-parent-section-while-dragging.htm"><b>scroll-parent-section-while-dragging</b></a> controls
whener scrolling happens and <a href="operators/cg/s/scroll-parent-section-distance.htm"><b>scroll-parent-section-distance</b></a> controls the
scroll increment. See also <a href="classes/cg/grid-widget.htm"><code>grid-widget</code></a> for general information on that
widget.
</li>
<li id="182">
<b>Several new functions for manipulating outline-items</b>. These new
generic functions have been added for progammatically manipulating
<a href="classes/cg/outline-item.htm"><code>outline-item</code></a>s
on <a href="classes/cg/outline.htm"><code>outline</code></a> widgets:
<a href="operators/cg/s/select-on-typing.htm"><b>select-on-typing</b></a>,
<a href="operators/cg/m/move-up-one-outline-item.htm"><b>move-up-one-outline-item</b></a>,
<a href="operators/cg/m/move-down-one-outline-item.htm"><b>move-down-one-outline-item</b></a>,
<a href="operators/cg/h/hide-outline-item-children.htm"><b>hide-outline-item-children</b></a>,
<a href="operators/cg/s/show-outline-item-children.htm"><b>show-outline-item-children</b></a>,
<a href="operators/cg/o/outline-item-removed.htm"><b>outline-item-removed</b></a>,
<a href="operators/cg/o/outline-item-added.htm"><b>outline-item-added</b></a>,
<a href="operators/cg/o/outline-items-reordered.htm"><b>outline-items-reordered</b></a>,
<a href="operators/cg/r/remove-outline-item.htm"><b>remove-outline-item</b></a>,
<a href="operators/cg/a/add-sibling-outline-item.htm"><b>add-sibling-outline-item</b></a>,
<a href="operators/cg/a/add-child-outline-item.htm"><b>add-child-outline-item</b></a>, and
<a href="operators/cg/s/shift-outline-item.htm"><b>shift-outline-item</b></a>.
</li>
<li id="183">
<b>New configuration option
delay-pop-up-menus-until-mouse-buttons-up</b>. <a href="operators/cg/d/delay-pop-up-menus-until-mouse-buttons-up.htm"><b>delay-pop-up-menus-until-mouse-buttons-up</b></a>, when
true, delays the appearance of a pop-up menu until all mouse buttons
are up. Its initial value is <code>nil</code> on Windows
but true on GTK (Linux and Mac). On GTK, we have not found a way to
prevent a mouse button release event from selecting an item on a
pop-up menu that was invoked while a mouse button is down.  That
behavior can lead to the user not seeing the menu altogether, or even
selecting an arbitrary item if the menu is placed under the mouse
cursor but does not appear until the mouse button has already been
released. That does not happen when the value of this new option is
true.
</li>
<li id="184">
<b>New function set-console-exterior on Windows only</b>. The function
<a href="operators/cg/s/set-console-exterior.htm"><b>set-console-exterior</b></a> allows
you to set the size and location of the console Window if there is
one. This is a Windows-only function.
</li>
<li id="185">
<b>ask-user-for-new-or-existing-directory and ask-user-for-directory
have some new arguments</b>. <a href="operators/cg/a/ask-user-for-directory.htm"><b>ask-user-for-directory</b></a> now has
a <b><i>include-edit-box</i></b> keyword argument (adds
a text-entry widget to the dialog) and
a <b><i>new-dialog-style</i></b> keyword argument (use
the new MS style for the dialog). <a href="operators/cg/a/ask-user-for-new-or-existing-directory.htm"><b>ask-user-for-new-or-existing-directory</b></a> has a
new <b><i>special-folders</i></b> keyword argument
(allows specifying special Windows folders like <i>My
Documents</i>). See the descriptions of
<a href="operators/cg/a/ask-user-for-new-or-existing-directory.htm"><b>ask-user-for-new-or-existing-directory</b></a>
and <a href="operators/cg/a/ask-user-for-directory.htm"><b>ask-user-for-directory</b></a> for full details.
</li>
<li id="186">
<b>New macro with-cg-bindings</b>. <a href="operators/cg/w/with-cg-bindings.htm"><b>with-cg-bindings</b></a> allows establishing the Common
Graphics variable bindings in an existing process where it is not
feasible to pass
<a href="variables/cg/s_default-cg-bindings_s.htm"><code>*default-cg-bindings*</code></a> at process
creation time.
</li>
<li id="187">
<b>window-message now returns a meaningful
value</b>. <a href="operators/cg/w/window-message.htm"><b>window-message</b></a>
returns <code>t</code> if the message was displayed in
some status bar (either that of the argument window or an ancestor of
the argument window) and returns <code>nil</code>
otherwise.
</li>
<li id="188">
<b>set-paragraph-format limited to 32 tab stops</b>. This is a Windows
limitation. The number of tab stops is specified by
the <i>tabs</i> keyword argument to
<a href="operators/cg/s/set-paragraph-format.htm"><b>set-paragraph-format</b></a>. Previously specifying a
value greater than 32 would cause an error. Now values greater than 32
are treated as if 32 were
specified. Specifying <code>nil</code> removes all tab
stops.
</li>
<li id="189">
<b>New outline control properties: ancestor-background-color and
highlight-ancestors</b>. these properties control whether an <a href="classes/cg/outline.htm"><code>outline</code></a> widget will draw the
background of each ancestor <a href="classes/cg/outline-item.htm"><code>outline-item</code></a> of the currently selected item in a
different color.
</li>
<li id="190">
<b>select-on-multiple-characters and
select-on-multiple-characters-time-limit now are properties of outline
widgets, along with new properties
select-on-multiple-characters-item-test and
select-on-multiple-characters-callback</b>. See <a href="operators/cg/s/select-on-multiple-characters.htm"><b>select-on-multiple-characters</b></a>, <a href="operators/cg/s/select-on-multiple-characters-time-limit.htm"><b>select-on-multiple-characters-time-limit</b></a>,
<a href="operators/cg/s/select-on-multiple-characters-item-test.htm"><b>select-on-multiple-characters-item-test</b></a>, <a href="operators/cg/s/select-on-multiple-characters-callback.htm"><b>select-on-multiple-characters-callback</b></a>
and <a href="classes/cg/outline.htm"><code>outline</code></a>.
</li>
<li id="191">
<b>New validate-edited-slot-value method allows validation of new slot
values in object-editors and class-grids.</b> The new method <a href="operators/cg/v/validate-edited-slot-value.htm"><b>validate-edited-slot-value</b></a> can be used
with <a href="classes/cg/object-editor.htm"><code>object-editor</code></a>s and
<a href="classes/cg/class-grid.htm"><code>class-grid</code></a>s to validate
input.
</li>
<li id="192">
<b>pop-up-string-dialog and ask-user-for-string have new cursor-at-end
argument</b>.  This specifies whether the cursor should be placed at
the end of the string to be modified (allowing for easy extension) or
the beginning (easier for replacing). See <a href="operators/cg/p/pop-up-string-dialog.htm"><b>pop-up-string-dialog</b></a> and <a href="operators/cg/a/ask-user-for-string.htm"><b>ask-user-for-string</b></a>.
</li>
<li id="193">
<b>pop-up-menus-for-many-sorted-choices has new case-insensitive and
on-help keyword arguments</b>. The
new <i>case-insensitive</i> keyword argument
to <a href="operators/cg/p/pop-up-menus-for-many-sorted-choices.htm"><b>pop-up-menus-for-many-sorted-choices</b></a> allows
specifying whether or not choices starting with the same letter, but
some lowercase and some upper, should be grouped together. The
new <i>on-help</i> argument allows you to specify a
function which may be used for displaying status bar messages as the
user highlights individual menu items.
</li>
<li id="194">
<b>pop-up-lettered-menu has new stream and on-help keyword
arguments</b>. The new <b><i>stream</i></b> argument to
<a href="operators/cg/p/pop-up-lettered-menu.htm"><b>pop-up-lettered-menu</b></a> is either
the screen or else a window that will serve as the owner of the pop-up
menu. The new <i>on-help</i> argument allows you to
specify a function which may be used for displaying status bar
messages as the user highlights individual menu items.
</li>
<li id="195">
<b>New printer-class keyword argument to
with-output-to-printer</b>. <a href="operators/cg/w/with-output-to-printer.htm"><b>with-output-to-printer</b></a> now has
a <b><i>printer-class</i></b> keyword argument which
allows you to specify a subclass of <a href="classes/cg/printer.htm"><code>cg:printer</code></a> as the type of stream to instantiate,
if desired.
</li>
<li id="196">
<b>New outline widget property lines-of-padding</b>. The
<a href="operators/cg/l/lines-of-padding.htm"><b>lines-of-padding</b></a> property of
<a href="classes/cg/outline.htm"><code>outline</code></a> widgets specifies
how many items should be in view around a selected outline-item
</li>
</ol>





<hr><h2 id="197"><a name="ide-release-notes-2">8.5 IDE release notes</a></h2>

<h4 id="198">
The IDE is supported on the Windows SMP Lisp. It is not supported in
the Mac or Linux SMP versions of Allegro CL 9.0. It is supported in
the non-SMP version of those platforms.
</h4>
<p id="199">
The non-SMP version runs one one hardware processor at a time, and
corresponds to earlier versions of Allegro CL.
</p>


<ol>
<li id="200">
<b>The :runtime-bundle build-flag is now included in the initial
build-flags value.</b> See <a href="operators/ide/build-flags.htm"><b>ide:build-flags</b></a>.
</li>
<li id="201">
<b>Class Interface Editor dialog changes</b>. The
<a href="ide-menus-and-dialogs/class-interface-editor-dialog.htm">Class
Interface Editor</a> has been enhanced to make the properties
that you can specify interactively for a <a href="classes/cg/class-grid.htm"><code>class-grid</code></a> be more nearly complete]
</li>
<li id="202">
The <a href="ide-menus-and-dialogs/inspect-dialog.htm">Inspect</a> now shows package names of slot values.
</li>
<li id="203">
<b>New checkbox on Find in Files dialog to specify whether
subprojects should searched</b>. The <b>Search Subprojects Later</b>
checkbox, when checked while searching a project, causes the entire
project hierarchy to be searched.  When unchecked, only the top-level
project is searched. See the <a href="ide-menus-and-dialogs/find-in-files-dialog.htm">Find In Files</a> dialog.
</li>
<li id="204">
<b>Revised Include Subdirectories checkbox on Find in Files
dialog</b>. The <b>Include Subdirectories</b> checkbox is now
labeled <b>Include Subdirectories or Subprojects</b> and controls
searching subprojects when searching a project. See
the <a href="ide-menus-and-dialogs/find-in-files-dialog.htm">Find In
Files</a> dialog.
</li>
<li id="205">
<b>ide:shift-windows-onto-screen-at-startup now works on the single
parent window</b>. <a href="operators/ide/shift-windows-onto-screen-at-startup.htm"><b>ide:shift-windows-onto-screen-at-startup</b></a> will
move the single parent window (which contains all IDE subwindows
when <a href="operators/ide/use-ide-parent-window.htm"><b>ide:use-ide-parent-window</b></a> is true) into
view. Its behavior when <a href="operators/ide/use-ide-parent-window.htm"><b>ide:use-ide-parent-window</b></a> is false is
unchanged.
</li>
<li id="206">
<b>New functionality for using Unicode in text files</b>. New
configuration options and other operators allow better handling of
Unicode text on Windows. See <a href="operators/ide/compile-files-as-utf8.htm"><b>compile-files-as-utf8</b></a>,
<a href="operators/cg/e/external-format-for-saved-files.htm"><b>external-format-for-saved-files</b></a>, <a href="operators/cg/e/external-format-for-save.htm"><b>external-format-for-save</b></a>, <a href="variables/excl/s_use-unicode-winapi-for-cg_s.htm"><code>*use-unicode-winapi-for-cg*</code></a>,
<a href="operators/cg/a/automatic-font-changing.htm"><b>automatic-font-changing</b></a>,
<a href="operators/cg/d/dual-fonts-for-languages.htm"><b>dual-fonts-for-languages</b></a>,
<a href="operators/ide/ide-auto-font-changing.htm"><b>ide:ide-auto-font-changing</b></a>,
<a href="operators/ide/ide-dual-fonts-for-languages.htm"><b>ide:ide-dual-fonts-for-languages</b></a>, 
<a href="operators/cg/w/write-bom-to-utf8-files.htm"><b>write-bom-to-utf8-files</b></a>,
and <a href="operators/cg/l/load-utf8-if-no-bom.htm"><b>load-utf8-if-no-bom</b></a>.
</li>
<li id="207">
<b>New Inspect Dialog option 'Inspect Sorted Copy'</b>. This option
appears on the <a href="ide-menus-and-dialogs/inspect-dialog.htm">Inspect</a> dialog when inspecting a list
or a vector. If chosen, a new sequence copied from the inspected one
and sorted by print name is inspected. This may make finding items in
long sequences easier.
</li>
<li id="208">
<b>File | Build Project Exe now File | Build Project
Executable</b>. The Build Project Exe item ion
the <a href="ide-menus-and-dialogs/file-menu.htm">File menu</a> is
now <a href="ide-menus-and-dialogs/file-menu.htm#build-project-exe">File | Build Project Executable</a>. We
wish to make clear the command does more than create a
single <b>exe</b> file.
</li>
<li id="209">
<b>New IDE option find-in-files-show-html-files-in-browser</b>. If the
IDE configuration option <a href="operators/ide/find-in-files-show-html-files-in-browser.htm"><b>ide:find-in-files-show-html-files-in-browser</b></a> is
true (its initial value) then HTML files (as determined by the file
type) will open in a browser rather than an editor buffer.
</li>
<li id="210">
<b>New IDE option find-in-files-file-list-portion</b>. If the IDE
configuration option <a href="operators/ide/find-in-files-file-list-portion.htm"><b>ide:find-in-files-file-list-portion</b></a> allows
users to specify the proportion between the heights of the two lower
widgets in the <a href="ide-menus-and-dialogs/find-in-files-dialog.htm">Find In Files</a> dialog, which list
the files that have matches followed by the matching lines in the
selected file.
</li>
<li id="211">
<b>Stepper dialog now has yellow highlighting for code which has
limited information</b>. The <a href="ide-menus-and-dialogs/stepper-dialog.htm">Stepper Dialog</a> highlight code being
stepped through. Green menas source code debugging info is available,
orange means you are stopped at a macro form, etc. Now yellow is a
possible highlight color and means you can do a <b>Step Into</b> to
step through the function that is being called on that step, though no
source debug info is known for the function that is being entered and
so it will be stepped through at the assembly language level.
</li>
<li id="212">
<b>New command on Run menu: Show Definition in Stepper Dialog</b>. The
menu command <a href="ide-menus-and-dialogs/run-menu.htm#show-def-stepper-dialog">Show Definition in Stepper
Dialog</a> on the <a href="ide-menus-and-dialogs/run-menu.htm">Run
menu</a> displays the source code of the selected function or
method in the <a href="ide-menus-and-dialogs/stepper-dialog.htm">Stepper
Dialog</a> and allows you to set breakpoints inside the
definition without breakpointing the entrance to and exit from the
function.
</li>
<li id="213">
<b>New project property concatenate-project-fasls</b>. The project
property <a href="operators/ide/concatenate-project-fasls.htm"><b>concatenate-project-fasls</b></a>, when true, causes
all project fasl files to be concatenated into a single fasl
file. This property can be set with setf or with the
<b>Concatenate Project Fasls</b> check box on the <a href="ide-menus-and-dialogs/project-manager-dialog-options.htm">Options</a> tab of the
<a href="ide-menus-and-dialogs/project-manager-dialog.htm">Project
Manager</a> dialog.
</li>
<li id="214">
<b>Finer control of opening files in Emacs from the IDE</b>. The
function <a href="operators/ide/open-files-in-gnu-emacs.htm"><b>ide:open-files-in-gnu-emacs</b></a> allows you to
specify that the <a href="ide-menus-and-dialogs/file-menu.htm#open">File | Open</a> command should open files in an Emacs
buffer rather than an IDE editor buffer. If you make the value of that
property <code>:open-only</code>,
the <a href="ide-menus-and-dialogs/file-menu.htm#save-all">File | Save All</a> menu command will not save
Emacs buffers. If the value of the property is any other true
value, <a href="ide-menus-and-dialogs/file-menu.htm#save-all">File | Save All</a> will save all unsaved Emacs
buffers.
</li>
<li id="215">
<b>Improved type-ahead in IDE listeners</b>.  Typing ahead in an IDE
listener while an evaluation is happening will now echo the characters
at the end of the text as you type them, rather than only after the
evaluation is complete.  Any printing that's done to the listener will
always be sent to the end of the listener's text rather than to the
text cursor position.
</li>
</ol>

<hr><h2 id="216"><a name="opening-earlier-projects-3">8.5.1 Opening projects from releases prior to 9.0</a></h2>

<p id="217">
Allegro CL 8.2 projects should open without problem in Allegro CL
9.0. 
</p>






<hr><h2 id="218"><a name="cg-win-gtk-2">8.6 Functionality to handle differences between Windows and GTK</a></h2>

<h3 id="219">
For complete information on the differences between Windows and GTK,
please see
<a href="cggtk-relnotes.html">cggtk-relnotes.html</a>.
</h3>


<p id="220">
Common Graphics and the IDE run on Windows and Linux with
GTK. Certain differences between the two operating systems and
windowing systems mean that some things do not work the same in
Windows as in GTK and vice versa. The functionality listed here
tries to handle the differences. Some of the
variables/operators/etc. are only available on one of the two platforms.
</p>

<h3 id="221">
Known bug with menu-items and buttons
</h3>

<p id="222">
<b>GTK Only</b>: all-black menu-items and half-black buttons.  There
is still a mystery on the GTK platform where all button widgets can
turn half black along a diagonal line, and all menu-items on some
platforms will be totally black.  This seems to happen only when
opening a project from the <a href="ide-menus-and-dialogs/startup-dialog.htm">Startup Action</a> dialog, though, so a
workaround is to not reopen a project from that dialog and instead to
use the <a href="ide-menus-and-dialogs/recent-menu.htm">Recent menu</a>
or <a href="ide-menus-and-dialogs/file-menu.htm#open-project">File | Open Project</a> just afterward.  We
have tracked the problem down to the use of transparent-pane windows
such as the frame-child of a form window, but beyond that it is a
total mystery.
</p>

<h4 id="223">
Mozilla support
</h4>

<p id="224">
The system needs to know the directory where the GTK control supplied
by Mozilla to support the <a href="classes/cg/html-widget.htm"><code>html-widget</code></a> resides. (On windows, the widget is
implemented in another way.) It may not be practical to search for the
location automatically. See <a href="operators/ide/mozilla-library-path.htm"><b>mozilla-library-path</b></a>, <a href="variables/excl/s_mozilla-library-path_s.htm"><code>*mozilla-library-path*</code></a>, and <a href="operators/cg/f/find-mozilla-gtk-path.htm"><b>find-mozilla-gtk-path</b></a>.
</p>

<h4 id="225">
Event handler processes
</h4>

<p id="226">
Because Linux currently does not use native threads and Windows does,
on Windows, all windows handle events in their own thread associated
with the window while on Linux/GTK, there is one event-handling
thread. <a href="operators/cg/d/default-application-window-subkey.htm"><b>default-application-window-subkey</b></a>, <a href="variables/cg/s_use-single-cg-event-handling-process_s.htm"><code>*use-single-cg-event-handling-process*</code></a>, and
<a href="variables/cg/s_single-cg-event-handling-process_s.htm"><code>*single-cg-event-handling-process*</code></a> allow
distinguishing behavior when necessary. <a href="operators/cg/c/cg-process-wait.htm"><b>cg-process-wait</b></a> should be used on GTK instead of
<a href="operators/mp/process-wait.htm"><b>process-wait</b></a> in event
handlers. See also <a href="operators/cg/p/process-pending-events-if-event-handler.htm"><b>process-pending-events-if-event-handler</b></a>.
</p>



<h4 id="227">
Miscellaneous
</h4>

<p id="228">
The <a href="operators/cg/w/with-message-window.htm"><b>with-message-window</b></a> window
is now a <a href="operators/cg/f/frameless-topmost-p.htm"><b>frameless-topmost-p</b></a>
window on the GTK platforms to avoid problems that it had otherwise.
This means that deselecting the owner window will close the message
window, and so it may be a good idea to display the message in an
additional place such as a status bar.
</p>




<hr><h2 id="229"><a name="win-pack-2">8.7 Release notes for the winapi module</a></h2>

<p id="230">
The winapi module contains certain functions, in the windows package,
that perform OS-related tasks. See <a href="cgide.htm#nocg-winapp-1">The Windows API and a Windows API program with
windows but without CG</a> in <a href="cgide.htm">cgide.htm</a> for
more information. 
</p>

<ol>
<li id="231">
<b>Unicase names for several functions removed. This is a
non-backward-compatible change</b>. For example, <b>CreateWin</b> and
related functions existed with uppercase names in ANSI Lisp and
lowercase names in nonANSI Lisp is earlier releases but now exists
only with a mixed case name. See <a href="cgide.htm#nocg-winapp-1">The Windows API and a Windows API program with
windows but without CG</a> in <a href="cgide.htm">cgide.htm</a> for
more information.
</li>
</ol>






<hr><hr><h2 id="232"><a name="aserve-1">9.0 Release notes for AllegroServe</a></h2>

<p id="233">
No notes at this time
</p>

<hr><hr><h2 id="234"><a name="eli-misc-1">10.0 Release notes for The Emacs/Lisp interface</a></h2>

<p id="235">
The command <b>fi:lisp-find-definition</b> no longer sets a mark.
</p>



<hr><hr><h2 id="236"><a name="clx-1">11.0 Availability of CLX for Allegro CL</a></h2>

<p id="237">
CLX (Common Lisp X) provides an interface between Common Lisp and the
X window system. All versions of Allegro CL include a compiled
version of CLX with the distribution. The <i>fasl</i>
file is <i>code/clx.fasl</i>, loaded by evaluating
<code>(require :clx)</code>. The Allegro CL products CLIM and
Allegro Composer use CLX. Users wanting low-level access to an X
server in Lisp may also want to use CLX.  CLX is not supported by
Franz Inc.
</p>
<p id="238">
The sources to CLX are supplied with the regular Allegro CL
distributions in the <i>contrib/clx/</i> directory. Note
that during installation, you are asked whether you wish to install
the <i>contrib/</i> directory and the default is not to
install it. The <i>contrib/</i> directory is not
included in the Trial distribution, but Trial users can download the
CLX sources from the Franz Inc. website as described next.
</p>
<p id="239">
The sources to CLX are also available on the Franz Inc. web site (<a href="http://franz.com/">franz.com</a>), at the location <a href="ftp://ftp.franz.com/pub/clx/">ftp://ftp.franz.com/pub/clx/</a>.
</p>

<hr><hr><h2 id="240"><a name="orblink-1">12.0 Release notes for Orblink</a></h2>

<p id="241">
No significant changes.
</p>


<hr><hr><h2 id="242"><a name="app-conformance-proj">Appendix A: ANSI Conformance in Allegro CL</a></h2>

<p id="243">
We discuss ANSI conformance in <a href="implementation.htm#compliance-1">Conformance with the ANSI specification</a>
in <a href="implementation.htm">implementation.htm</a>. Elsewhere in
<a href="implementation.htm">implementation.htm</a> we discuss specifics of our
implementation of certain Common Lisp functionality.
</p>


</body><hr><p id="2"><small>Copyright (c) 1998-2016, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br>
<small>This page was not revised from the 9.0 page.</small><br><small>Created 2015.5.21.</small><br>
</p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><a href="contents.htm"><b>ToC</b></a></td><td align="left" bgcolor="#00FFFF"><a href="introduction.htm"><b>DocOverview</b></a></td><td align="left" bgcolor="#00FFFF"><a href="cgide.htm"><b>CGDoc</b></a></td><td align="left" bgcolor="#00FFFF"><a href="release-notes.htm"><b>RelNotes</b></a></td><td align="left" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faq/"><b>FAQ</b></a></td><td align="left" bgcolor="#00FFFF"><a href="index.htm"><b>Index</b></a></td><td align="left" bgcolor="#00FFFF"><a href="permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 10.0</b><br><small><a href="introduction.htm#updates-s">Unrevised from 9.0 to 10.0.</a></small><br></td></tr></table></html>