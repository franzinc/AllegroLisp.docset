<html><head><meta http-equiv="content-type" name="description" content="text/html; charset=UTF-8"> <title>make-ssl-server-stream</title><link rel="stylesheet" href="../../acldoc-styles.css" type="text/css"></head><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><b>Function</b></td><td align="left" bgcolor="#00FFFF"><b>Package: socket</b></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faq/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 10.0</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 9.0 to 10.0.</a></small><br><a href="http://www.franz.com/support/documentation/9.0/doc/operators/socket/make-ssl-server-stream.htm">9.0 version</a></td></tr></table><h2 id="2">make-ssl-server-stream</h2>

<p id="3"><b>Arguments: </b><i>
socket </i>&amp;key <i>context certificate key certificate-password method verify max-depth ca-file ca-directory ciphers crl-check crl-file prefer-server-cipher-order</i><i>
</i></p>



<p id="4">
This function is not available in all versions. Generally, you must
have an Enterprise license to use this function. Also, you must have
the OpenSSL libraries installed for this facility to work. Note that
shared library versions of the OpenSSL libraries (required by Allegro
CL) are not available on all platforms. The SSL functionality is in
the <i>ssl</i> module. To ensure it is loaded, evaluate
<code>(require :ssl)</code>. Calling this function automatically
loads the module.
</p>
<p id="5">
This function creates and returns a new SSL server socket stream that
communicates via SSL via the given socket. Once this function is
called and an SSL socket stream is returned, no I/O calls should be
done directly to <i>socket</i>.  Note that closing the
SSL socket stream will result in the original socket file descriptor
being closed as well.  Therefore, the idiomatic way to establish an
SSL server socket stream is:
</p>
<pre id="6">
  ;; SOCK is already a socket:
  (setf sock (make-ssl-server-stream sock ...))
</pre>
<p id="7">
Unless <a href="ssl-do-handshake.htm"><b>ssl-do-handshake</b></a> is called, the secure
connection isn't negotiated until the first byte is sent through the
SSL socket stream to the underlying stream (and this will usually
occur when the first <a href="../../../ansicl/dictentr/finish-o.htm"><b>force-output</b></a> is done to the SSL socket stream).
</p>
<p id="8">
When that first write is done a negotiation process is begun that
involves reads and writes. This negotiation process will not occur if
the SSL socket on the other end of the connection is not sitting waiting
for data to arrive. Thus if you create two connected sockets in a
single Lisp process, and make one the client and the other the server,
and then write to the client side the Lisp will hang since the server
side socket isn't being read.  You can make this work if you use the Lisp
multiprocessing facility (see <a href="../../multiprocessing.htm">multiprocessing.htm</a>)
to cause the server socket to be read at the same time that the write
to the client socket is being done.
</p>
<p id="9">
The <b><i>context</i></b> keyword argument takes an SSL
context object as a value. Such objects contain relevant
information about the server stream being created. The
function <a href="make-ssl-server-context.htm"><b>make-ssl-server-context</b></a> create a context
suitable for a server stream.
</p>
<p id="10">
Note
that if you supply an SSL context object as the value of context, you
can specify values for the
arguments <i>method</i>, <i>ciphers</i>,
<i>verify</i>, <i>max-depth</i>,
and <i>prefer-server-cipher-order</i> in the call to
this function. Doing so causes the associated argument value to be
local to the connection being created (i.e. the specified argument
value overrides the value in the context object). However, it is an
error to specify values for the
arguments <i>certificate</i>, <i>key</i>,
<i>ca-file</i>, <i>ca-directory</i>,
<i>certificate-password</i>, <i>crl-file</i>,
and <i>crl-check</i> cannot be overridden when a context
is provided. 
</p>


<p id="11">
If an error occurs, a condition of
type <code>excl::ssl-error</code> is signaled. This condition
has slots what (a string indicating what internal operation was being
performed when the error occurred), codes (a ist of numeric OpenSSL
error codes that represented the accumulated errors that resulted in
the final error), strings (a list of the corresponding string forms of
the OpenSSL error codes in the 'codes' slot) and verify-result, and
verify-result-string. The last two will be populated if possible when
an ssl error occurs. If non-nil, this information is included in the
printed representation of the condition.  This aids recognizing and
debugging certificate-related SSL errors.
</p>


<p id="12">
See <a href="make-ssl-client-stream.htm"><b>make-ssl-client-stream</b></a>. See also
<a href="../../socket.htm">socket.htm</a> for information on sockets. For
information on Secure Sockets, see the section <a href="../../socket.htm#ssl-1">Secure Socket Layer (SSL)</a> in
that document.
</p>





<hr><p id="13"><small>Copyright (c) 1998-2016, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br>
<small>This page was not revised from the 9.0 page.</small><br><small>Created 2015.5.21.</small><br>
</p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"></td><td align="left" bgcolor="#00FFFF"></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faq/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 10.0</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 9.0 to 10.0.</a></small><br><a href="http://www.franz.com/support/documentation/9.0/doc/operators/socket/make-ssl-server-stream.htm">9.0 version</a></td></tr></table></body></html>