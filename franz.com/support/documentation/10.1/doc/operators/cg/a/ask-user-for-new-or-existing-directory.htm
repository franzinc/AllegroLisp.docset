<html><head><meta name="viewport" content="width=device-width, initial-scale=1"> <meta http-equiv="content-type" name="description" content="text/html; charset=UTF-8"> <link rel="stylesheet" href="../../../acldoc-styles.css" type="text/css"><title>ask-user-for-new-or-existing-directory</title></head><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><b>Function</b></td><td align="left" bgcolor="#00FFFF"><b>Package: cg</b></td><td align="center" bgcolor="#00FFFF"><a href="../../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faq/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 10.1</b><br><small><a href="../../../introduction.htm#updates-s">Unrevised from 10.0 to 10.1.</a></small><br><a href="http://www.franz.com/support/documentation/10.0/doc/operators/cg/a/ask-user-for-new-or-existing-directory.htm">10.0 version</a></td></tr></table><h2 id="2">ask-user-for-new-or-existing-directory</h2>



<p id="3"><b>Arguments: </b><i>
</i>&amp;key  (<i>owner</i> (selected-window-or-screen)) (<i>type</i> :either) (<i>always-show-text-box</i> t)<i> title prompt position width height</i> (<i>scope</i> :all) (<i>special-folders</i> (quote ((:personal "Home")))) (<i>create-if-new</i> t)<i> initial-directory initial-subdirectory show-initial-directory-siblings</i> (<i>show-local-file-systems</i> t)<i> look-ahead</i> (<i>prompt-for-password-if-needed</i> t) (<i>focus-on-new-subdirectory</i> (eq type :new))<i> close-subtrees-on-close show-initial-directory-children search-network-globally</i><i>
</i></p>

<p id="4">
This function displays a modal dialog that allows the user to specify
a new or existing directory (also known as a folder).  The directory
can be specified either by selecting it in the outline widget, or
entering an absolute path namestring in the text-entry widget, or by
entering a relative path namestring in the text-entry widget that is
relative to the directory that is selected in the outline.  It does
not matter whether the user types a final slash character after a
directory name in the text-entry widget. Help strings at the bottom
of the dialog guide the user in specifying a complete path.
</p>
<p id="5">
Two values are returned: (1) A pathname for the directory that was
specified by the user (or <code>nil</code> if the user
cancels the dialog), and (2) either <code>t</code> or
<code>nil</code>, indicating whether the directory is a
new one (that is, <code>nil</code> if there already was a
directory at the specified path, and <code>t</code> if
there was not).
</p>
<p id="6">
The arguments are:
</p>
<ul>
<li id="7">
<b><i>owner</i></b>: either the screen or a
window. Defaults to the stream returned by <a href="../s/selected-window-or-screen.htm"><b>selected-window-or-screen</b></a>. If a
window, then the modal dialog will be owned by this window (and
therefore will stay in front of it) and will be modal with respect to
this window (meaning that interactive gestures are disabled in all
other windows of the window hierarchy that has this window as its
root).
</li>
<li id="8">
<b><i>type</i></b>: a keyword indicating whether a new
or existing directory (or either) is being requested.  The value must
be one of the following three symbols:
<ul>
<li id="9">
<code>:either</code> (the default), meaning the user may specify
either a new or an existing directory. 
</li>
<li id="10">
<code>:new</code>, meaning only a new directory may be
specified.  </li> <li id="11"> <code>:existing</code>, meaning only an
existing directory may be specified. 
</li>
</ul>
<p id="12">
For either <code>:new</code> or <code>:either</code>, a
text control will always appear below the outline for entering a new
subdirectory name.  For :existing, this control will appear only if
<i>always-show-text-box</i> is true.
</p>
</li>

<li id="13">
<b><i>always-show-text-box</i></b>: if true, then the
text-entry widget for specifying all or part of the path textually
will be always be included on the dialog;
if <code>nil</code>, then the text-entry widget will be
included when the type argument is <code>:new</code>
or <code>:either</code>, but not when it
is <code>:existing</code>. The default value is
true. <b>Compatibility note</b>: Through version 8.1, the behavior was
always as if this new argument were <code>nil</code>, and
so <code>nil</code> must be passed explicitly to retain
the 8.1 behavior. 
</li>

<li id="14">
<b><i>title</i></b>: a string to display in the
title-bar of the dialog.  The default string depends on the
<i>type</i> argument.
</li>
<li id="15">
<b><i>prompt</i></b>: a string to display in the body of
the dialog to instruct the user what to do. The height of the prompt area in the dialog
will be adjusted automatically so that the prompt string fits.
</li>
<li id="16">
<b><i>position</i></b>: either a position object (see
<a href="../m/make-position.htm"><b>make-position</b></a>)
indicating the screen position of the upper-left exterior corner of
the dialog, or <code>nil</code> (the default) to use a
default position. The default position is determined by <a href="../c/center-modal-children.htm"><b>center-modal-children</b></a> and
<a href="../c/center-all-modal-dialogs-on-screen.htm"><b>center-all-modal-dialogs-on-screen</b></a>,
as with the other built-in utility dialogs.

</li>
<li id="17">

<b><i>width</i></b>: either a positive integer
indicating the exterior pixel width of the dialog, or <code>nil</code> to use the width that was used most recently with
the specified owner, including interactive resizing that the user may
have done.  Initially a moderate default width is used.

</li>
<li id="18">

<b><i>height</i></b>: either a positive integer
indicating the exterior pixel height of the dialog, or <code>nil</code> to use the height that was used most recently
with the specified owner, including interactive resizing that the user
may have done.  Initially a moderate default height is used.

</li>
<li id="19">

<b><i>scope</i></b>: a keyword indicating whether local
disks or network shares (or both) are to be included in the outline.
The value must one of the following symbols:

<ul>
<li id="20">
<code>:all</code> (the default), meaning both local disks and
network shares are included.
</li>
<li id="21">
<code>:local</code>, meaning only local disks are included.
</li>
<li id="22">
<code>:remote</code>, meaning only network shares are included.
</li>
</ul>
</li>

<li id="23">
<b><i>special-folders</i></b>: a list of special
directories to include as top-level items in the outline widget,
alongside the usual top-level items for local and remote file systems.
The value should be a list where each member is a list of at least two
things: (1) one of the keyword values that can be passed to the
function win:special-windows-directory, (2) a string to display for
the folder in the dialog, and (3) an optional third boolean value that
indicates whether the outline item for the folder should initially be
open to reveal its child folders. 
<p id="24">
The default value is <code>((:personal #+mswindows "My Documents"
#-mswindows "Home"))</code>, which will include a "My Documents"
item on Windows and the home directory item on Linux.  On Linux,
:personal is currently the only indicator that will be used.  On
Windows, the indicator :personal should be used for the "My Documents"
folder, because the :my-documents argument to
win:special-windows-directory does not seem to work.
</p>
<p id="25">
<b>Compatibility note</b>: Through version 8.1, the behavior was
always as if this new argument were <code>nil</code>, and
so <code>nil</code> must be passed explicitly to retain
the 8.1 behavior.
</p>
<p id="26">
Here is an example value that includes some additional possibly useful
values on the Windows platform:
</p>
<pre id="27">
  :special-folders '((:personal #+mswindows "My Documents"
                                #-mswindows "Home"
                                t) ;; show child folders initially
                     (:recent "My Recent Documents")
                     (:app-data "Application Data")
                     (:desktop "Desktop")))
</pre>
</li>

<li id="28">
<b><i>create-if-new</i></b>: this argument is used only
if the user specifies a new subdirectory. In that case, if
<i>create-if-new</i> is true (the default), then the
specified subdirectory is created automatically before its pathname is
returned, and otherwise it is not. In any case, the second returned
value will be true if and only if a new subdirectory was
specified. Multiple directories will be created automatically if
the specified path ends with a chain a multiple subdirectories that do
not yet exist.
</li>


<li id="29">
<b><i>show-initial-directory-children</i></b>: this
argument is used only when an <i>initial-directory</i>
argument is specified. If <code>nil</code> (the default),
then no children of the outline-item for the initial directory are
visible when the dialog appears. If true, then that outline-item is
opened to reveal any immediate subdirectories of the initial
directory.
</li>


<li id="30">
<b><i>show-local-file-systems</i></b>: if true, then the
top-level item for local disks or file systems will initially be open
to reveal the individual file systems;
if <code>nil</code>, then it will not be. The default
value is true. 
</li>

<li id="31">
<b><i>initial-directory</i></b>: either <code>nil</code> (the default) or a pathname or namestring
indicating the directory to which the outline will initially be
opened.  The specified directory (if any) will also be initially
selected.  This option is useful for suggesting the area of the
directory hierarchy in which the user may want to select a directory,
and for making it easier for the user to browse to the probable
desired directory.  When this argument is <code>nil</code>, the outline is always opened to show only the
local disks and/or the network shares, and the topmost outline-item
will initially be selected.
<p id="32">
If this argument is a namestring rather than a pathname, it does not
matter whether the namestring contains a final slash.  Also, if the
specified directory does not exist, the outline will still initially
be opened to any upper levels of the specified directory that do
exist.  It is also OK to pass in the full pathname of a file that is
(or could be) in the desired directory; the pathname name and type
will be ignored.
</p>
</li>
<li id="33">
<b><i>initial-subdirectory</i></b>: either <code>nil</code> (the default) or a string to display initially in
the text control where the user may enter a new subdirectory
name. This argument is ignored if the <i>type</i>
argument is <code>:existing</code> (in which case the text
control for a new subdirectory will not appear at all).  When <code>nil</code>, this control will be empty initially.
</li>
<li id="34">
<b><i>show-initial-directory-siblings</i></b>: this
argument is used only when an <i>initial-directory</i>
argument is specified.  If <code>nil</code> (the default),
then each level of the outline that is opened in order to display the
initial-directory will show only the single child item that leads to
the specified <i>initial-directory</i>.  If true, then
all siblings of each opened item will also be shown initially.  The
advantages of each choice are that the first shows less clutter, while
the second provides more initial context.  The user can navigate to
any directory in either case, and a "partially open" outline-item in
the <code>nil</code> case will show a plus icon to
indicate that it has more children in addition to the one that it's
already showing.
</li>
<li id="35">
<b><i>look-ahead</i></b>: if <code>nil</code> (the default), then whenever an outline-item is
opened to show its subitems, the icons for each subitem will always
initially indicate that the subitem may be opened to show further
subitems, even if in fact there are no further subdirectories for some
or all of the newly-displayed directories. If true, then whenever new
subitems are shown, the dialog will "look ahead" to see if each of the
newly displayed subdirectories has any further subdirectories, and
will display appropriate icons for each item to inform the user
whether there will be anything further to see if each displayed item
is opened.  The advantages of each choice are that the first is
faster, while the second provides additional useful information to the
user.  This option may be particularly slow for network shares.

</li>
<li id="36">

<b><i>prompt-for-password-if-needed</i></b>: if true
(the default), then if the user attempts to open a network share but
the user's default username and password are not correct for that
share, than a dialog is shown to allow the user to enter a different
username and password.  If <code>nil</code>, then a simple
beep indicates when the user may not open a network share.

</li>
<li id="37">

<b><i>focus-on-new-subdirectory</i></b>: if this
argument is true and a valid initial-directory argument was specified,
then the keyboard focus will be initially in the text control for
typing in a new subdirectory name.  Otherwise the keyboard focus will
be initially in the outline control of the dialog.  The default for
this argument is true if the <i>type</i> argument is
<code>:new</code>, and is otherwise <code>nil</code>.  This option may be useful if the application is
asking the user for a new subdirectory when the probable parent
directory is known (and passed as the initial-directory argument); in
this case the user can typically type in the new subdirectory name
immediately and return.

</li>
<li id="38">

<b><i>close-subtrees-on-close</i></b>: the <a href="../c/close-subtrees-on-close.htm"><b>close-subtrees-on-close</b></a>
property of the outline control will be set to the value of this
argument for this call.  The default is <code>nil</code>
for each call.

</li>


<li id="39">

<b><i>search-network-globally</i></b>: This argument is
used only on the Windows platform. To find the networked machines to
list, a true argument will search the network "globally",
whereas <code>nil</code> (the default) will search only
"in the current context".  The default
is <code>nil</code>. This argument is passed (as the value
of the
<i>global</i> keyword argument) to <a href="../../windows/network-machines.htm"><b>win:network-machines</b></a>; see that function for
more information. This argument applies to Microsoft Windows only.

</li>


</ul>

<h4 id="40">Other notes</h4>

<p id="41">
The dialog displays a file folder for each outline-item that
represents an actual directory that may be returned. On Windows, this
excludes the two root items for all "Local Disks" and "Network
Machines" plus each network share (because only the descendent items
of each share represent actual directories).  These non-directory
items will display a simple triangle icon instead of a file folder.
</p>
<p id="42">
The OK button on the dialog will be disabled if no directory that may
be returned is currently specified. This includes whenever a
non-directory outline-item is selected. If
the <i>type</i> argument is <code>:existing</code>
(and <i>always-show-text-box is true</i>), this also
includes when the text-entry widget contains text that does not name
an existing directory. And if the
<i>type</i> argument is <code>:new</code>, this
also includes when the text control for the new subdirectory name is
empty or contains an invalid directory name. At these times, the user
may not exit the dialog by pressing the OK button or by pressing
ENTER, but they may always exit by canceling the dialog (as usual, by
pressing the ESCAPE key or the Cancel button or clicking the small
close button in the frame).
</p>
<p id="43">
On Windows, if the directory-selecting dialog that is provided by
Microsoft is desired for its native look and feel, then the alternate
function <a href="../a/ask-user-for-directory.htm"><b>ask-user-for-directory</b></a> will display
that dialog.  But that function has fewer options than this one, and
on GTK it simply calls this function.
</p>

<hr><p id="44"><small>Copyright (c) 1998-2017, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br>
<small>This page was not revised from the 10.0 page.</small><br><small>Created 2017.2.15.</small><br>
</p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"></td><td align="left" bgcolor="#00FFFF"></td><td align="center" bgcolor="#00FFFF"><a href="../../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faq/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 10.1</b><br><small><a href="../../../introduction.htm#updates-s">Unrevised from 10.0 to 10.1.</a></small><br><a href="http://www.franz.com/support/documentation/10.0/doc/operators/cg/a/ask-user-for-new-or-existing-directory.htm">10.0 version</a></td></tr></table></body></html>