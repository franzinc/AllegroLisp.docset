<html><head><meta name="viewport" content="width=device-width, initial-scale=1"> <meta http-equiv="content-type" name="description" content="text/html; charset=UTF-8"> <link rel="stylesheet" href="../../acldoc-styles.css" type="text/css"><title>with-staged-output</title></head><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><b>Macro</b></td><td align="left" bgcolor="#00FFFF"><b>Package: excl</b></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faq/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 10.1</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 10.0 to 10.1.</a></small><br><a href="http://www.franz.com/support/documentation/10.0/doc/operators/excl/with-staged-output.htm">10.0 version</a></td></tr></table><h2 id="2">with-staged-output</h2>

<p id="3"><b>Arguments: </b><i>
(staging-stream stream) </i> &amp;body <i>body</i><i>
</i></p>

<p id="4">
If output to <b><i>stream</i></b> is synchronized (as
per <a href="synchronized-output-stream-p.htm"><b>synchronized-output-stream-p</b></a>), then bind
<b><i>staging-stream</i></b> to a string output stream
whose contents are written atomically to <i>stream</i>
upon leaving <i>body</i> (even if by a non-local
exit). Atomicity in this context means
that <i>stream</i> is locked with <a href="with-locked-stream.htm"><b>with-locked-stream</b></a>, thus output is safe even in
face of concurrent use, provided that all threads use
<a href="with-staged-output.htm"><b>with-staged-output</b></a> or lock the
stream directly.
</p>
<p id="5">
Currently almost all functions that write streams employ
<a href="with-staged-output.htm"><b>with-staged-output</b></a>, so that
the user only has to <a href="synchronized-output-stream-p.htm"><b>(setf
(synchronized-output-stream-p stream) t</b></a> and output to the
stream will not be mixed, lost, etc. even if several threads write the
stream at the same time.
</p>
<p id="6">
<a href="../../../ansicl/dictentr/print-un.htm"><b>print-unreadable-object</b></a>,
<a href="../../../ansicl/dictentr/writepri.htm"><b>write</b></a>, <a href="../../../ansicl/dictentr/write-se.htm"><b>write-sequence</b></a>, <a href="write-vector.htm"><b>write-vector</b></a>, <a href="../../../ansicl/dictentr/write-st.htm"><b>write-string</b></a>, <a href="../../../ansicl/dictentr/write-st.htm"><b>write-line</b></a>, <a href="../../../ansicl/dictentr/writepri.htm"><b>pprint</b></a>, <a href="../../../ansicl/dictentr/pprint-f.htm"><b>pprint-fill</b></a>, <a href="../../../ansicl/dictentr/pprint-f.htm"><b>pprint-linear</b></a>, and <a href="../../../ansicl/dictentr/pprint-f.htm"><b>pprint-tabular</b></a> all use
<a href="with-staged-output.htm"><b>with-staged-output</b></a>. <a href="../../../ansicl/dictentr/format.htm"><b>format</b></a> does too except when creating a string
(i.e. its first argument is nil).
</p>
<p id="7">
Notable functions that do <b>not</b> use <a href="with-staged-output.htm"><b>with-staged-output</b></a> (because the overhead would
be too high): <a href="../../../ansicl/dictentr/write-ch.htm"><b>write-char</b></a>,
<a href="../../../ansicl/dictentr/write-by.htm"><b>write-byte</b></a>,
and <a href="../../../ansicl/dictentr/terprifr.htm"><b>terpri</b></a>.
</p>
<h4 id="8">
Notes:
</h4>
<ol>
<li id="9">
The staging stream is a single channel output stream
(buffer-output-simple-stream or a string-output-simple-stream). If
the underlying stream is to be used for input (and output) then
<a href="with-staged-output.htm"><b>with-staged-output</b></a> may not
be the best idea. Input synchronization is not currently supported.
</li>
<li id="10">
The dynamic context in which actual output is written is
different, so one must be careful with - among other things -
condition handlers.
</li>
<li id="11">
Closing the underlying stream before the contents of the
staging stream are written to it is not allowed.
</li>
</ol>
<p id="12">
Nested occurences of <a href="with-staged-output.htm"><b>with-staged-output</b></a> do the right thing by
default: unless the staging stream is synchronized, the inner
<a href="with-staged-output.htm"><b>with-staged-output</b></a> will
simply bind <i>staging-stream</i>
to <i>stream</i>.
</p>

<hr><p id="13"><small>Copyright (c) 1998-2017, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br>
<small>This page was not revised from the 10.0 page.</small><br><small>Created 2017.2.15.</small><br>
</p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"></td><td align="left" bgcolor="#00FFFF"></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faq/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 10.1</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 10.0 to 10.1.</a></small><br><a href="http://www.franz.com/support/documentation/10.0/doc/operators/excl/with-staged-output.htm">10.0 version</a></td></tr></table></body></html>