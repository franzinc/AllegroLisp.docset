<html><head><meta name="viewport" content="width=device-width, initial-scale=1"> <meta http-equiv="content-type" name="description" content="text/html; charset=UTF-8"> <link rel="stylesheet" href="../../acldoc-styles.css" type="text/css"><title>atomic-conditional-setq</title></head><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><b>Special Operator</b></td><td align="left" bgcolor="#00FFFF"><b>Package: excl</b></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faq/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 10.1</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 10.0 to 10.1.</a></small><br><a href="http://www.franz.com/support/documentation/10.0/doc/operators/excl/atomic-conditional-setq.htm">10.0 version</a></td></tr></table><h2 id="2">atomic-conditional-setq</h2>

<p id="3"><b>Arguments: </b><i>
symbol newval-form oldval-form
</i></p>

<p id="4">
This special operator returns a boolean of success or failure to store
the value into the symbol's value location.  It is intended to be a
synchronizing mechanism for symbols which represent variables shared
by multiple threads.  It is undefined for symbols which represent a
purely local (i.e. non-shared) value. Currently, the interpreted form
of <a href="atomic-conditional-setq.htm"><b>atomic-conditional-setq</b></a>
accepts such local variables, but the compiler will signal an error if
the variable is not special or closed-over.
</p>
<h3 id="5">
Arguments
</h3>
<ul>
<li id="6">
<b><i>symbol</i></b> may name either a special or a
closed-over variable.  If the symbol names a symbol-macro or is
currently shadowed by a symbol-macrolet, then the <a href="atomic-conditional-setf.htm"><b>excl:atomic-conditional-setf</b></a> is used to handle
the macroexpansion (which might then eventually get back to <a href="atomic-conditional-setq.htm"><b>atomic-conditional-setq</b></a> if
the place value is symbolic after full macroexpansion).
<p id="7">
Note that the compilation of <a href="atomic-conditional-setq.htm"><b>atomic-conditional-setq</b></a> does not error
if the symbol names a special variable and that special is currently
<b>let/lambda</b> bound in the current thread even though such a value is
thread-local.  Also, the compilation of <a href="atomic-conditional-setq.htm"><b>atomic-conditional-setq</b></a> does
not error if the variable is closed over but can't possibly be seen by
another thread.
</p>
</li>
<li id="8">
<b><i>newval-form</i></b> is any form which will be
evaluated and the result used as a new value to store into the symbol.
</li>
<li id="9">
<b><i>oldval-form</i></b> is evaluated to a value,
presumably taken from the symbol's value at an earlier time.
</li>
</ul>
<p id="10">
In an atomic operation, if the variable's current value is EQ to the
old value then the new value is stored into the variable location and
the special operator returns True.  Otherwise, the new value is not
stored, and the special-operator returns false. Note that none of the
evaluations of the symbol as a variable, or of the newval-form, or of
the oldval-form, are atomic; the only operations that are atomic are
the comparison and store, if there is one.
</p>

<hr><p id="11"><small>Copyright (c) 1998-2017, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br>
<small>This page was not revised from the 10.0 page.</small><br><small>Created 2017.2.15.</small><br>
</p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"></td><td align="left" bgcolor="#00FFFF"></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faq/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 10.1</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 10.0 to 10.1.</a></small><br><a href="http://www.franz.com/support/documentation/10.0/doc/operators/excl/atomic-conditional-setq.htm">10.0 version</a></td></tr></table></body></html>