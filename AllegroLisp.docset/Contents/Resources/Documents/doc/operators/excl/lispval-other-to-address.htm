<html><head><meta http-equiv="content-type" name="description" content="text/html; charset=UTF-8"> <title>lispval-other-to-address</title><link rel="stylesheet" href="../../acldoc-styles.css" type="text/css"></head><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><b>Function</b></td><td align="left" bgcolor="#00FFFF"><b>Package: excl</b></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faq/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 10.0</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 9.0 to 10.0.</a></small><br><a href="http://www.franz.com/support/documentation/9.0/doc/operators/excl/lispval-other-to-address.htm">9.0 version</a></td></tr></table><h2 id="2">lispval-other-to-address</h2>

<p id="3"><b>Arguments: </b><i>static-array</i></p>

<p id="4">Allegro CL supports static arrays, where the array is stored in
malloc space, which is never moved and untouched by the garbage
collector. Such arrays are created with <a href="../../../ansicl/dictentr/make-arr.htm"><b>make-array</b></a> using the Allegro-CL-specific
<i>allocation</i> keyword argument, as
described in the description of 
<a href="../../implementation.htm#cl-make-array-2">make-array</a> in
<a href="../../implementation.htm">implementation.htm</a>. See also
<a href="../../gc.htm#static-arrays-2">Static arrays</a> in
<a href="../../gc.htm">gc.htm</a>.
</p>

<p id="5">
This function is useful for freeing a static array (recall, it will
not be garbage collected). When called with a static array as its
argument, it returns an integer suitable to be the argument to
<a href="aclfree.htm"><b>aclfree</b></a>. 
The array will be freed when 
<a href="aclfree.htm"><b>aclfree</b></a> is called with 
that integer as its argument. Be sure
not to try to access the array after it has been freed in that way, as
doing so will return meaningless values. Even worse is storing in this
now invalid array. Doing that may overwrite data now used by something
else, with potentially disastrous results.
</p>

<h3 id="6">
The value returned by this function is not suitable for accessing array values
</h3>

<p id="7">
Do not use the value returned by this function to access elements of
the array. Even though the array is not moved once it is created (so
the value remains valid regardless of garbage collections), it points
to the array header, not the array data. While in theory you could
figure out where the data starts given the header location, there is
no guarantee that offset will not be changed in some update. Further,
changing the array from static allocation to (say) heap allocation
will invalidate any accessing code.
</p>
<p id="8">
Instead you should associate a foreign type to the array
(see <a href="../../ftype.htm">ftype.htm</a>) and use
with <a href="../ff/fslot-value-typed.htm"><b>fslot-value-typed</b></a> and
<a href="../ff/fslot-address-typed.htm"><b>fslot-address-typed</b></a>.
</p>





<hr><p id="9"><small>Copyright (c) 1998-2016, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br>
<small>This page was not revised from the 9.0 page.</small><br><small>Created 2015.5.21.</small><br>
</p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"></td><td align="left" bgcolor="#00FFFF"></td><td align="center" bgcolor="#00FFFF"><a href="../../contents.htm"><b>ToC</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../introduction.htm"><b>DocOverview</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../cgide.htm"><b>CGDoc</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../release-notes.htm"><b>RelNotes</b></a></td><td align="center" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faq/"><b>FAQ</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../index.htm"><b>Index</b></a></td><td align="center" bgcolor="#00FFFF"><a href="../../permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 10.0</b><br><small><a href="../../introduction.htm#updates-s">Unrevised from 9.0 to 10.0.</a></small><br><a href="http://www.franz.com/support/documentation/9.0/doc/operators/excl/lispval-other-to-address.htm">9.0 version</a></td></tr></table></body></html>